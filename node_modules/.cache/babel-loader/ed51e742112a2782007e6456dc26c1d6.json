{"ast":null,"code":"import _mapValues from \"lodash/mapValues\";\nimport _defaults from \"lodash/defaults\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nimport _assign from \"lodash/assign\";\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nimport { Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar Helpers = {\n  getDimension: function getDimension(props) {\n    var horizontal = props.horizontal,\n      brushDimension = props.brushDimension;\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds: function withinBounds(point, bounds, padding) {\n    var _mapValues2 = _mapValues(bounds, Number),\n      x1 = _mapValues2.x1,\n      x2 = _mapValues2.x2,\n      y1 = _mapValues2.y1,\n      y2 = _mapValues2.y2;\n    var _mapValues3 = _mapValues(point, Number),\n      x = _mapValues3.x,\n      y = _mapValues3.y;\n    padding = padding ? padding / 2 : 0;\n    return x + padding >= Math.min(x1, x2) && x - padding <= Math.max(x1, x2) && y + padding >= Math.min(y1, y2) && y - padding <= Math.max(y1, y2);\n  },\n  getDomainBox: function getDomainBox(props, fullDomain, selectedDomain) {\n    var brushDimension = this.getDimension(props);\n    fullDomain = _defaults({}, fullDomain, props.domain);\n    selectedDomain = _defaults({}, selectedDomain, fullDomain);\n    var fullCoords = Selection.getDomainCoordinates(props, fullDomain);\n    var selectedCoords = Selection.getDomainCoordinates(props, selectedDomain);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.min.apply(Math, _toConsumableArray(fullCoords.x)),\n      x2: brushDimension !== \"y\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.max.apply(Math, _toConsumableArray(fullCoords.x)),\n      y1: brushDimension !== \"x\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.min.apply(Math, _toConsumableArray(fullCoords.y)),\n      y2: brushDimension !== \"x\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.max.apply(Math, _toConsumableArray(fullCoords.y))\n    };\n  },\n  getHandles: function getHandles(props, domainBox) {\n    var brushDimension = this.getDimension(props);\n    var x1 = domainBox.x1,\n      x2 = domainBox.x2,\n      y1 = domainBox.y1,\n      y2 = domainBox.y2;\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    var handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles: function getActiveHandles(point, props, domainBox) {\n    var _this = this;\n    var handles = this.getHandles(props, domainBox);\n    var activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce(function (memo, opt) {\n      memo = handles[opt] && _this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo;\n      return memo;\n    }, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation: function getResizeMutation(box, handles) {\n    var x1 = box.x1,\n      y1 = box.y1,\n      x2 = box.x2,\n      y2 = box.y2;\n    var mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1: x1,\n        x2: x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1: x1,\n        x2: x2\n      }\n    };\n    return handles.reduce(function (memo, current) {\n      return _assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain: function getMinimumDomain() {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea: function getDefaultBrushArea(targetProps, cachedDomain, evt) {\n    var defaultBrushArea = targetProps.defaultBrushArea,\n      domain = targetProps.domain,\n      fullDomain = targetProps.fullDomain,\n      scale = targetProps.scale,\n      horizontal = targetProps.horizontal;\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      var brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      var pannedBox = this.panBox(_objectSpread({}, targetProps, brushBox, {\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }), Selection.getSVGEventCoordinates(evt, parentSVG));\n      var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n    } else {\n      return domain;\n    }\n  },\n  getSelectionMutation: function getSelectionMutation(point, box, brushDimension) {\n    var x = point.x,\n      y = point.y;\n    var x1 = box.x1,\n      x2 = box.x2,\n      y1 = box.y1,\n      y2 = box.y2;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox: function panBox(props, point) {\n    var domain = props.domain,\n      startX = props.startX,\n      startY = props.startY;\n    var brushDimension = this.getDimension(props);\n    var brushDomain = _defaults({}, props.brushDomain, domain);\n    var fullDomain = _defaults({}, props.fullDomain, domain);\n    var _ref = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain),\n      x1 = _ref.x1,\n      x2 = _ref.x2,\n      y1 = _ref.y1,\n      y2 = _ref.y2;\n    var x = point.x,\n      y = point.y;\n    var delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox: function constrainBox(box, fullDomainBox) {\n    var _mapValues4 = _mapValues(fullDomainBox, Number),\n      x1 = _mapValues4.x1,\n      y1 = _mapValues4.y1,\n      x2 = _mapValues4.x2,\n      y2 = _mapValues4.y2;\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  hasMoved: function hasMoved(props) {\n    var x1 = props.x1,\n      x2 = props.x2,\n      y1 = props.y1,\n      y2 = props.y2,\n      mouseMoveThreshold = props.mouseMoveThreshold;\n    var brushDimension = this.getDimension(props);\n    var xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    var yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n      case \"y\":\n        return yMoved;\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown: function onMouseDown(evt, targetProps) {\n    var _this2 = this;\n    evt.preventDefault();\n    var handleWidth = targetProps.handleWidth,\n      cachedBrushDomain = targetProps.cachedBrushDomain,\n      domain = targetProps.domain,\n      allowResize = targetProps.allowResize,\n      allowDrag = targetProps.allowDrag,\n      allowDraw = targetProps.allowDraw;\n    var brushDimension = this.getDimension(targetProps); // Don't trigger events for static brushes\n\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n    var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt, parentSVG),\n      x = _Selection$getSVGEven.x,\n      y = _Selection$getSVGEven.y; // Ignore events that occur outside of the maximum domain region\n\n    if (!this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n    var brushDomain = _defaults({}, targetProps.brushDomain, domain);\n    var currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    var domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    var activeHandles = allowResize && this.getActiveHandles({\n      x: x,\n      y: y\n    }, targetProps, domainBox); // If the event occurs in any of the handle regions, start a resize\n\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _objectSpread({\n            isSelecting: true,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain: currentDomain,\n            parentSVG: parentSVG\n          }, _this2.getResizeMutation(domainBox, activeHandles));\n        }\n      }];\n    } else if (this.withinBounds({\n      x: x,\n      y: y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _objectSpread({\n            isPanning: allowDrag,\n            startX: x,\n            startY: y,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            currentDomain: currentDomain,\n            cachedBrushDomain: brushDomain,\n            parentSVG: parentSVG\n          }, domainBox);\n        }\n      }];\n    } else {\n      // if the event occurs outside the region, or if the whole domain is selected,\n      // start a new selection\n      return allowDraw ? [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _objectSpread({\n            isSelecting: allowResize,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            parentSVG: parentSVG,\n            cachedBrushDomain: brushDomain,\n            cachedCurrentDomain: currentDomain,\n            currentDomain: _this2.getMinimumDomain()\n          }, _this2.getSelectionMutation({\n            x: x,\n            y: y\n          }, domainBox, brushDimension));\n        }\n      }] : {};\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseMove: function onMouseMove(evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n    var scale = targetProps.scale,\n      isPanning = targetProps.isPanning,\n      isSelecting = targetProps.isSelecting,\n      fullDomainBox = targetProps.fullDomainBox,\n      onBrushDomainChange = targetProps.onBrushDomainChange,\n      allowResize = targetProps.allowResize,\n      allowDrag = targetProps.allowDrag,\n      horizontal = targetProps.horizontal,\n      mouseMoveThreshold = targetProps.mouseMoveThreshold;\n    var brushDimension = this.getDimension(targetProps);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n      x = _Selection$getSVGEven2.x,\n      y = _Selection$getSVGEven2.y; // Ignore events that occur outside of the maximum domain region\n\n    if (!allowResize && !allowDrag || !this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox) || mouseMoveThreshold > 0 && !this.hasMoved(_objectSpread({}, targetProps, {\n      x2: x,\n      y2: y\n    }))) {\n      return {};\n    }\n    if (allowDrag && isPanning) {\n      var startX = targetProps.startX,\n        startY = targetProps.startY;\n      var pannedBox = this.panBox(targetProps, {\n        x: x,\n        y: y\n      });\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      var currentDomain = Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n      var mutatedProps = _objectSpread({\n        currentDomain: currentDomain,\n        parentSVG: parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y\n      }, constrainedBox);\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return mutatedProps;\n        }\n      }];\n    } else if (allowResize && isSelecting) {\n      var x2 = brushDimension !== \"y\" ? x : targetProps.x2;\n      var y2 = brushDimension !== \"x\" ? y : targetProps.y2;\n      var _currentDomain = Selection.getBounds({\n        x2: x2,\n        y2: y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale: scale,\n        horizontal: horizontal\n      });\n      var _mutatedProps = {\n        x2: x2,\n        y2: y2,\n        currentDomain: _currentDomain,\n        parentSVG: parentSVG\n      };\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(_currentDomain, _defaults({}, _mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _mutatedProps;\n        }\n      }];\n    }\n    return {};\n  },\n  onMouseUp: function onMouseUp(evt, targetProps) {\n    // eslint-disable-line max-statements, complexity\n    var x1 = targetProps.x1,\n      y1 = targetProps.y1,\n      x2 = targetProps.x2,\n      y2 = targetProps.y2,\n      isPanning = targetProps.isPanning,\n      isSelecting = targetProps.isSelecting,\n      onBrushDomainChange = targetProps.onBrushDomainChange,\n      onBrushDomainChangeEnd = targetProps.onBrushDomainChangeEnd,\n      onBrushCleared = targetProps.onBrushCleared,\n      currentDomain = targetProps.currentDomain,\n      allowResize = targetProps.allowResize,\n      allowDrag = targetProps.allowDrag,\n      defaultBrushArea = targetProps.defaultBrushArea;\n    var defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    var mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    }; // if the mouse hasn't moved since a mouseDown event, select the default brush area\n\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      var cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      var defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (_isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n    return [{\n      target: \"parent\",\n      mutation: function mutation() {\n        return mutatedProps;\n      }\n    }];\n  },\n  onMouseLeave: function onMouseLeave() {\n    return [{\n      target: \"parent\",\n      mutation: function mutation() {\n        return {\n          isPanning: false,\n          isSelecting: false\n        };\n      }\n    }];\n  }\n};\nexport default _objectSpread({}, Helpers, {\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onMouseUp: Helpers.onMouseUp.bind(Helpers),\n  onMouseLeave: Helpers.onMouseLeave.bind(Helpers),\n  onMouseMove: _throttle(Helpers.onMouseMove.bind(Helpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n});","map":{"version":3,"names":["_mapValues","_defaults","_isFunction","_throttle","_assign","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","arr2","Selection","isEqual","Helpers","getDimension","props","horizontal","brushDimension","withinBounds","point","bounds","padding","_mapValues2","Number","x1","x2","y1","y2","_mapValues3","x","y","Math","min","max","getDomainBox","fullDomain","selectedDomain","domain","fullCoords","getDomainCoordinates","selectedCoords","apply","getHandles","domainBox","minX","maxX","minY","maxY","handleWidth","left","right","top","bottom","getActiveHandles","_this","handles","activeHandles","reduce","memo","opt","getResizeMutation","box","mutations","current","getMinimumDomain","MAX_SAFE_INTEGER","getDefaultBrushArea","targetProps","cachedDomain","evt","defaultBrushArea","scale","brushBox","parentSVG","getParentSVG","pannedBox","panBox","brushDomain","startX","startY","getSVGEventCoordinates","fullDomainBox","constrainedBox","constrainBox","getBounds","getSelectionMutation","_ref","delta","_mapValues4","abs","hasMoved","mouseMoveThreshold","xMoved","yMoved","onMouseDown","_this2","preventDefault","cachedBrushDomain","allowResize","allowDrag","allowDraw","_Selection$getSVGEven","currentDomain","mutation","isSelecting","isPanning","cachedCurrentDomain","onMouseMove","onBrushDomainChange","_Selection$getSVGEven2","mutatedProps","_currentDomain","_mutatedProps","onMouseUp","onBrushDomainChangeEnd","onBrushCleared","defaultBrushHasArea","undefined","defaultDomain","onMouseLeave","bind","leading","trailing"],"sources":["/root/experiment/nova-explorer/node_modules/victory-brush-container/es/brush-helpers.js"],"sourcesContent":["import _mapValues from \"lodash/mapValues\";\nimport _defaults from \"lodash/defaults\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar Helpers = {\n  getDimension: function (props) {\n    var horizontal = props.horizontal,\n        brushDimension = props.brushDimension;\n\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds: function (point, bounds, padding) {\n    var _mapValues2 = _mapValues(bounds, Number),\n        x1 = _mapValues2.x1,\n        x2 = _mapValues2.x2,\n        y1 = _mapValues2.y1,\n        y2 = _mapValues2.y2;\n\n    var _mapValues3 = _mapValues(point, Number),\n        x = _mapValues3.x,\n        y = _mapValues3.y;\n\n    padding = padding ? padding / 2 : 0;\n    return x + padding >= Math.min(x1, x2) && x - padding <= Math.max(x1, x2) && y + padding >= Math.min(y1, y2) && y - padding <= Math.max(y1, y2);\n  },\n  getDomainBox: function (props, fullDomain, selectedDomain) {\n    var brushDimension = this.getDimension(props);\n    fullDomain = _defaults({}, fullDomain, props.domain);\n    selectedDomain = _defaults({}, selectedDomain, fullDomain);\n    var fullCoords = Selection.getDomainCoordinates(props, fullDomain);\n    var selectedCoords = Selection.getDomainCoordinates(props, selectedDomain);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.min.apply(Math, _toConsumableArray(fullCoords.x)),\n      x2: brushDimension !== \"y\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.max.apply(Math, _toConsumableArray(fullCoords.x)),\n      y1: brushDimension !== \"x\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.min.apply(Math, _toConsumableArray(fullCoords.y)),\n      y2: brushDimension !== \"x\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.max.apply(Math, _toConsumableArray(fullCoords.y))\n    };\n  },\n  getHandles: function (props, domainBox) {\n    var brushDimension = this.getDimension(props);\n    var x1 = domainBox.x1,\n        x2 = domainBox.x2,\n        y1 = domainBox.y1,\n        y2 = domainBox.y2;\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    var handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1: x1,\n        x2: x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles: function (point, props, domainBox) {\n    var _this = this;\n\n    var handles = this.getHandles(props, domainBox);\n    var activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce(function (memo, opt) {\n      memo = handles[opt] && _this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo;\n      return memo;\n    }, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation: function (box, handles) {\n    var x1 = box.x1,\n        y1 = box.y1,\n        x2 = box.x2,\n        y2 = box.y2;\n    var mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1: x1,\n        x2: x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1: x1,\n        x2: x2\n      }\n    };\n    return handles.reduce(function (memo, current) {\n      return _assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain: function () {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea: function (targetProps, cachedDomain, evt) {\n    var defaultBrushArea = targetProps.defaultBrushArea,\n        domain = targetProps.domain,\n        fullDomain = targetProps.fullDomain,\n        scale = targetProps.scale,\n        horizontal = targetProps.horizontal;\n\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      var brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      var pannedBox = this.panBox(_objectSpread({}, targetProps, brushBox, {\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }), Selection.getSVGEventCoordinates(evt, parentSVG));\n      var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n    } else {\n      return domain;\n    }\n  },\n  getSelectionMutation: function (point, box, brushDimension) {\n    var x = point.x,\n        y = point.y;\n    var x1 = box.x1,\n        x2 = box.x2,\n        y1 = box.y1,\n        y2 = box.y2;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox: function (props, point) {\n    var domain = props.domain,\n        startX = props.startX,\n        startY = props.startY;\n    var brushDimension = this.getDimension(props);\n\n    var brushDomain = _defaults({}, props.brushDomain, domain);\n\n    var fullDomain = _defaults({}, props.fullDomain, domain);\n\n    var _ref = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain),\n        x1 = _ref.x1,\n        x2 = _ref.x2,\n        y1 = _ref.y1,\n        y2 = _ref.y2;\n\n    var x = point.x,\n        y = point.y;\n    var delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox: function (box, fullDomainBox) {\n    var _mapValues4 = _mapValues(fullDomainBox, Number),\n        x1 = _mapValues4.x1,\n        y1 = _mapValues4.y1,\n        x2 = _mapValues4.x2,\n        y2 = _mapValues4.y2;\n\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  hasMoved: function (props) {\n    var x1 = props.x1,\n        x2 = props.x2,\n        y1 = props.y1,\n        y2 = props.y2,\n        mouseMoveThreshold = props.mouseMoveThreshold;\n    var brushDimension = this.getDimension(props);\n    var xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    var yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n\n      case \"y\":\n        return yMoved;\n\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown: function (evt, targetProps) {\n    var _this2 = this;\n\n    evt.preventDefault();\n    var handleWidth = targetProps.handleWidth,\n        cachedBrushDomain = targetProps.cachedBrushDomain,\n        domain = targetProps.domain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        allowDraw = targetProps.allowDraw;\n    var brushDimension = this.getDimension(targetProps); // Don't trigger events for static brushes\n\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n\n    var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven.x,\n        y = _Selection$getSVGEven.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n\n    var brushDomain = _defaults({}, targetProps.brushDomain, domain);\n\n    var currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    var domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    var activeHandles = allowResize && this.getActiveHandles({\n      x: x,\n      y: y\n    }, targetProps, domainBox); // If the event occurs in any of the handle regions, start a resize\n\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isSelecting: true,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain: currentDomain,\n            parentSVG: parentSVG\n          }, _this2.getResizeMutation(domainBox, activeHandles));\n        }\n      }];\n    } else if (this.withinBounds({\n      x: x,\n      y: y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isPanning: allowDrag,\n            startX: x,\n            startY: y,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            currentDomain: currentDomain,\n            cachedBrushDomain: brushDomain,\n            parentSVG: parentSVG\n          }, domainBox);\n        }\n      }];\n    } else {\n      // if the event occurs outside the region, or if the whole domain is selected,\n      // start a new selection\n      return allowDraw ? [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isSelecting: allowResize,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            parentSVG: parentSVG,\n            cachedBrushDomain: brushDomain,\n            cachedCurrentDomain: currentDomain,\n            currentDomain: _this2.getMinimumDomain()\n          }, _this2.getSelectionMutation({\n            x: x,\n            y: y\n          }, domainBox, brushDimension));\n        }\n      }] : {};\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseMove: function (evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n\n    var scale = targetProps.scale,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        fullDomainBox = targetProps.fullDomainBox,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        horizontal = targetProps.horizontal,\n        mouseMoveThreshold = targetProps.mouseMoveThreshold;\n    var brushDimension = this.getDimension(targetProps);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven2.x,\n        y = _Selection$getSVGEven2.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!allowResize && !allowDrag || !this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox) || mouseMoveThreshold > 0 && !this.hasMoved(_objectSpread({}, targetProps, {\n      x2: x,\n      y2: y\n    }))) {\n      return {};\n    }\n\n    if (allowDrag && isPanning) {\n      var startX = targetProps.startX,\n          startY = targetProps.startY;\n      var pannedBox = this.panBox(targetProps, {\n        x: x,\n        y: y\n      });\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      var currentDomain = Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n\n      var mutatedProps = _objectSpread({\n        currentDomain: currentDomain,\n        parentSVG: parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y\n      }, constrainedBox);\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return mutatedProps;\n        }\n      }];\n    } else if (allowResize && isSelecting) {\n      var x2 = brushDimension !== \"y\" ? x : targetProps.x2;\n      var y2 = brushDimension !== \"x\" ? y : targetProps.y2;\n\n      var _currentDomain = Selection.getBounds({\n        x2: x2,\n        y2: y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale: scale,\n        horizontal: horizontal\n      });\n\n      var _mutatedProps = {\n        x2: x2,\n        y2: y2,\n        currentDomain: _currentDomain,\n        parentSVG: parentSVG\n      };\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(_currentDomain, _defaults({}, _mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _mutatedProps;\n        }\n      }];\n    }\n\n    return {};\n  },\n  onMouseUp: function (evt, targetProps) {\n    // eslint-disable-line max-statements, complexity\n    var x1 = targetProps.x1,\n        y1 = targetProps.y1,\n        x2 = targetProps.x2,\n        y2 = targetProps.y2,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        onBrushDomainChangeEnd = targetProps.onBrushDomainChangeEnd,\n        onBrushCleared = targetProps.onBrushCleared,\n        currentDomain = targetProps.currentDomain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        defaultBrushArea = targetProps.defaultBrushArea;\n    var defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    var mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    }; // if the mouse hasn't moved since a mouseDown event, select the default brush area\n\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      var cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      var defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return mutatedProps;\n      }\n    }];\n  },\n  onMouseLeave: function () {\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return {\n          isPanning: false,\n          isSelecting: false\n        };\n      }\n    }];\n  }\n};\nexport default _objectSpread({}, Helpers, {\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onMouseUp: Helpers.onMouseUp.bind(Helpers),\n  onMouseLeave: Helpers.onMouseLeave.bind(Helpers),\n  onMouseMove: _throttle(Helpers.onMouseMove.bind(Helpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}