{"ast":null,"code":"import _toConsumableArray from\"/root/experiment/nova-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/root/experiment/nova-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from\"react\";import{Table,TableRow,TableCell,TableHead,TableBody,Typography,Button}from\"@material-ui/core\";import{hexToString,hexToNumber}from\"@etclabscore/eserialize\";import{useHistory}from\"react-router-dom\";import _ from\"lodash\";import greenColor from\"@material-ui/core/colors/green\";var blockTopMiners=function blockTopMiners(blocks){var result=_(blocks).chain().countBy(function(b){return b.miner;}).map(function(key,val){return{address:val,blocksMined:key};}).sortBy(function(item){return item.blocksMined;}).reverse().value();return result;};var groupByMiner=function groupByMiner(blocks){var result=_.chain(blocks).groupBy(function(b){return b.miner;}).map(function(value,key){return _defineProperty({},key,_.groupBy(value,function(item){return hexToString(item.extraData);}));}).value();return result;};var MinerStatsTable=function MinerStatsTable(_ref2){var blocks=_ref2.blocks;var history=useHistory();var topMiners=blockTopMiners(blocks);var groupedMiners=Object.assign.apply(Object,[{}].concat(_toConsumableArray(groupByMiner(blocks))));return/*#__PURE__*/React.createElement(Table,{\"aria-label\":\"simple table\",style:{border:\"0px solid\",borderRadius:\"30px\",padding:\"10px\",maxWidth:\"90%\",margin:\"auto\"}},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Blocks\"),/*#__PURE__*/React.createElement(TableCell,null,\"Validator\"),/*#__PURE__*/React.createElement(TableCell,null,\"Blocks\"))),/*#__PURE__*/React.createElement(TableBody,null,topMiners.map(function(minerData){return/*#__PURE__*/React.createElement(TableRow,{key:minerData.miner},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},minerData.blocksMined),/*#__PURE__*/React.createElement(TableCell,{colSpan:2},/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableBody,null,_.map(groupedMiners[minerData.address],function(bs,key){return/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,key),/*#__PURE__*/React.createElement(TableCell,{colSpan:1},bs.map(function(block){var percentFull=hexToNumber(block.gasUsed)/hexToNumber(block.gasLimit)*100;return/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",style:{margin:\"3px\",background:\"linear-gradient(to right, \".concat(greenColor[600],\" 0% \").concat(percentFull,\"%, transparent \").concat(percentFull,\"% 100%)\")},onClick:function onClick(){return history.push(\"/block/\".concat(block.hash));}},/*#__PURE__*/React.createElement(Typography,null,hexToNumber(block.number)));})));})))));})));};export default MinerStatsTable;","map":{"version":3,"names":["React","Table","TableRow","TableCell","TableHead","TableBody","Typography","Button","hexToString","hexToNumber","useHistory","_","greenColor","blockTopMiners","blocks","result","chain","countBy","b","miner","map","key","val","address","blocksMined","sortBy","item","reverse","value","groupByMiner","groupBy","_defineProperty","extraData","MinerStatsTable","_ref2","history","topMiners","groupedMiners","Object","assign","apply","concat","_toConsumableArray","createElement","style","border","borderRadius","padding","maxWidth","margin","minerData","component","scope","colSpan","bs","block","percentFull","gasUsed","gasLimit","variant","background","onClick","push","hash","number"],"sources":["/root/experiment/nova-explorer/src/components/MinerStatsTable.tsx"],"sourcesContent":["import React from \"react\";\nimport { Table, TableRow, TableCell, TableHead, TableBody, Typography, Button } from \"@material-ui/core\";\nimport { hexToString, hexToNumber } from \"@etclabscore/eserialize\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport greenColor from \"@material-ui/core/colors/green\";\n\nconst blockTopMiners = (blocks: any[]) => {\n  const result = _(blocks).chain()\n    .countBy((b: any) => b.miner)\n    .map((key: string, val: number) => ({\n      address: val,\n      blocksMined: key,\n    }))\n    .sortBy((item: any) => item.blocksMined)\n    .reverse()\n    .value();\n  return result;\n};\n\nconst groupByMiner = (blocks: any[]) => {\n  const result = _.chain(blocks)\n    .groupBy((b: any) => b.miner)\n    .map((value, key) => {\n      return {\n        [key]: _.groupBy(value, (item) => {\n          return hexToString(item.extraData);\n        }),\n      };\n    })\n    .value();\n  return result;\n};\n\ninterface IProps {\n  blocks: any[];\n}\n\nconst MinerStatsTable: React.FC<IProps> = ({ blocks }) => {\n  const history = useHistory();\n  const topMiners = blockTopMiners(blocks);\n  const groupedMiners = Object.assign({}, ...groupByMiner(blocks));\n  return (\n    <Table aria-label=\"simple table\" style={{\n      border: \"0px solid\",\n      borderRadius: \"30px\",\n      padding: \"10px\",\n      maxWidth: \"90%\",\n      margin: \"auto\"\n    }}>\n      <TableHead>\n        <TableRow>\n          <TableCell>Blocks</TableCell>\n          <TableCell>Validator</TableCell>\n          <TableCell>Blocks</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {topMiners.map((minerData: any) => (\n          <TableRow key={minerData.miner} >\n            <TableCell component=\"th\" scope=\"row\">\n              {minerData.blocksMined}\n            </TableCell>\n            <TableCell colSpan={2}>\n              <Table>\n                <TableBody>\n                  {_.map(groupedMiners[minerData.address], (bs: any[], key: string) => (\n                    <TableRow>\n                      <TableCell>{key}</TableCell>\n                      <TableCell colSpan={1}>\n                        {bs.map((block) => {\n                          const percentFull = (hexToNumber(block.gasUsed) / hexToNumber(block.gasLimit)) * 100;\n                          return (\n                            <Button\n                              variant=\"outlined\"\n                              style={{\n                                margin: \"3px\",\n                                background: `linear-gradient(to right, ${greenColor[600]} 0% ${percentFull}%, transparent ${percentFull}% 100%)`,\n                              }}\n                              onClick={() => history.push(`/block/${block.hash}`)}\n                            >\n                              <Typography>\n                                {hexToNumber(block.number)}\n                              </Typography>\n                            </Button>\n                          );\n                        })}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n\n    </Table >\n\n  );\n};\n\nexport default MinerStatsTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}