{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nimport * as d3Shape from \"d3-shape\";\nimport { circle, point } from \"./geometry-helper-methods\";\nvar getPosition = function getPosition(props, width) {\n  var x = props.x,\n    x0 = props.x0,\n    y = props.y,\n    y0 = props.y0,\n    horizontal = props.horizontal;\n  var alignment = props.alignment || \"middle\";\n  var size = alignment === \"middle\" ? width / 2 : width;\n  var sign = horizontal ? -1 : 1;\n  if (horizontal) {\n    return {\n      x0: x0,\n      x1: x,\n      y0: alignment === \"start\" ? y : y - sign * size,\n      y1: alignment === \"end\" ? y : y + sign * size\n    };\n  }\n  return {\n    x0: alignment === \"start\" ? x : x - sign * size,\n    x1: alignment === \"end\" ? x : x + sign * size,\n    y0: y0,\n    y1: y\n  };\n};\nvar getAngle = function getAngle(props, index) {\n  var data = props.data,\n    scale = props.scale;\n  var x = data[index]._x1 === undefined ? \"_x\" : \"_x1\";\n  return scale.x(data[index][x]);\n};\nvar getAngularWidth = function getAngularWidth(props, width) {\n  var scale = props.scale;\n  var range = scale.y.range();\n  var r = Math.max.apply(Math, _toConsumableArray(range));\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  return width / (2 * Math.PI * r) * angularRange;\n};\nvar transformAngle = function transformAngle(angle) {\n  return -1 * angle + Math.PI / 2;\n};\nexport var getCustomBarPath = function getCustomBarPath(props, width) {\n  var getPath = props.getPath;\n  var propsWithCalculatedValues = _objectSpread({}, props, getPosition(props, width));\n  return getPath(propsWithCalculatedValues);\n};\nvar getStartAngle = function getStartAngle(props, index) {\n  var data = props.data,\n    scale = props.scale,\n    alignment = props.alignment;\n  var currentAngle = getAngle(props, index);\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  var previousAngle = index === 0 ? getAngle(props, data.length - 1) - Math.PI * 2 : getAngle(props, index - 1);\n  if (index === 0 && angularRange < 2 * Math.PI) {\n    return scale.x.range()[0];\n  } else if (alignment === \"start\" || alignment === \"end\") {\n    return alignment === \"start\" ? previousAngle : currentAngle;\n  } else {\n    return (currentAngle + previousAngle) / 2;\n  }\n};\nvar getEndAngle = function getEndAngle(props, index) {\n  var data = props.data,\n    scale = props.scale,\n    alignment = props.alignment;\n  var currentAngle = getAngle(props, index);\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  var lastAngle = scale.x.range()[1] === 2 * Math.PI ? getAngle(props, 0) + Math.PI * 2 : scale.x.range()[1];\n  var nextAngle = index === data.length - 1 ? getAngle(props, 0) + Math.PI * 2 : getAngle(props, index + 1);\n  if (index === data.length - 1 && angularRange < 2 * Math.PI) {\n    return lastAngle;\n  } else if (alignment === \"start\" || alignment === \"end\") {\n    return alignment === \"start\" ? currentAngle : nextAngle;\n  } else {\n    return (currentAngle + nextAngle) / 2;\n  }\n};\nvar mapPointsToPath = function mapPointsToPath(coords, cornerRadius, direction) {\n  var topLeftPath = \"\".concat(cornerRadius.topLeft, \" \").concat(cornerRadius.topLeft, \" \").concat(direction);\n  var topRightPath = \"\".concat(cornerRadius.topRight, \" \").concat(cornerRadius.topRight, \" \").concat(direction);\n  var bottomLeftPath = \"\".concat(cornerRadius.bottomLeft, \" \").concat(cornerRadius.bottomLeft, \" \").concat(direction);\n  var bottomRightPath = \"\".concat(cornerRadius.bottomRight, \" \").concat(cornerRadius.bottomRight, \" \").concat(direction);\n  var commands = [\"M\", \"A \".concat(bottomLeftPath, \",\"), \"L\", \"A \".concat(topLeftPath, \",\"), \"L\", \"A \".concat(topRightPath, \",\"), \"L\", \"A \".concat(bottomRightPath, \",\")];\n  var path = commands.reduce(function (acc, command, i) {\n    acc += \"\".concat(command, \" \").concat(coords[i].x, \", \").concat(coords[i].y, \" \\n\");\n    return acc;\n  }, \"\");\n  return \"\".concat(path, \" z\");\n};\nvar getVerticalBarPoints = function getVerticalBarPoints(position, sign, cr) {\n  var x0 = position.x0,\n    x1 = position.x1,\n    y0 = position.y0,\n    y1 = position.y1; // eslint-disable-next-line max-statements, max-len\n\n  var getHalfPoints = function getHalfPoints(side) {\n    var isLeft = side === \"Left\";\n    var signL = isLeft ? 1 : -1;\n    var x = isLeft ? x0 : x1;\n    var bottomPoint = {\n      x: x + signL * cr[\"bottom\".concat(side)],\n      y: y0\n    };\n    var bottomMiddlePoint = {\n      x: x,\n      y: y0 - sign * cr[\"bottom\".concat(side)]\n    };\n    var topMiddlePoint = {\n      x: x,\n      y: y1 + sign * cr[\"top\".concat(side)]\n    };\n    var topPoint = {\n      x: x + signL * cr[\"top\".concat(side)],\n      y: y1\n    };\n    var hasIntersection = sign === 1 ? y0 - cr[\"bottom\".concat(side)] < y1 + cr[\"top\".concat(side)] : y0 + cr[\"bottom\".concat(side)] > y1 - cr[\"top\".concat(side)];\n    if (hasIntersection) {\n      var topCenter = point(x + signL * cr[\"top\".concat(side)], y1 + sign * cr[\"top\".concat(side)]);\n      var topCircle = circle(topCenter, cr[\"top\".concat(side)]);\n      var bottomCenter = point(x + signL * cr[\"bottom\".concat(side)], y0 - sign * cr[\"bottom\".concat(side)]);\n      var bottomCircle = circle(bottomCenter, cr[\"bottom\".concat(side)]);\n      var circleIntersection = topCircle.intersection(bottomCircle);\n      var hasArcIntersection = circleIntersection.length > 0;\n      if (hasArcIntersection) {\n        var arcIntersection = circleIntersection[isLeft ? 0 : 1];\n        bottomMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n        topMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n      } else {\n        var hasBottomLineTopArcIntersection = cr[\"top\".concat(side)] > cr[\"bottom\".concat(side)];\n        if (hasBottomLineTopArcIntersection) {\n          var newX = topCircle.solveX(y0)[isLeft ? 0 : 1];\n          bottomPoint = {\n            x: newX,\n            y: y0\n          };\n          bottomMiddlePoint = {\n            x: newX,\n            y: y0\n          };\n          topMiddlePoint = {\n            x: newX,\n            y: y0\n          };\n        } else {\n          var _newX = bottomCircle.solveX(y1)[isLeft ? 0 : 1];\n          bottomMiddlePoint = {\n            x: _newX,\n            y: y1\n          };\n          topMiddlePoint = {\n            x: _newX,\n            y: y1\n          };\n          topPoint = {\n            x: _newX,\n            y: y1\n          };\n        }\n      }\n    }\n    var points = [bottomPoint, bottomMiddlePoint, topMiddlePoint, topPoint];\n    return isLeft ? points : points.reverse();\n  };\n  return getHalfPoints(\"Left\").concat(getHalfPoints(\"Right\"));\n};\nvar getHorizontalBarPoints = function getHorizontalBarPoints(position, sign, cr) {\n  var y0 = position.y0,\n    y1 = position.y1;\n  var x0 = position.x0 < position.x1 ? position.x0 : position.x1;\n  var x1 = position.x0 < position.x1 ? position.x1 : position.x0; // eslint-disable-next-line max-statements, max-len\n\n  var getHalfPoints = function getHalfPoints(side) {\n    var isTop = side === \"top\";\n    var signL = isTop ? -1 : 1;\n    var y = isTop ? y1 : y0;\n    var leftPoint = {\n      x: x0,\n      y: y - signL * cr[\"\".concat(side, \"Left\")]\n    };\n    var leftMiddlePoint = {\n      x: x0 + cr[\"\".concat(side, \"Left\")],\n      y: y\n    };\n    var rightMiddlePoint = {\n      x: x1 - cr[\"\".concat(side, \"Right\")],\n      y: y\n    };\n    var rightPoint = {\n      x: x1,\n      y: y - signL * cr[\"\".concat(side, \"Right\")]\n    };\n    var hasIntersection = leftMiddlePoint.x > rightMiddlePoint.x;\n    if (hasIntersection) {\n      var leftCenter = point(x0 + cr[\"\".concat(side, \"Left\")], y - signL * cr[\"\".concat(side, \"Left\")]);\n      var leftCircle = circle(leftCenter, cr[\"\".concat(side, \"Left\")]);\n      var rightCenter = point(x1 - cr[\"\".concat(side, \"Right\")], y - signL * cr[\"\".concat(side, \"Right\")]);\n      var rightCircle = circle(rightCenter, cr[\"\".concat(side, \"Right\")]);\n      var circleIntersection = leftCircle.intersection(rightCircle);\n      var hasArcIntersection = circleIntersection.length > 0;\n      if (hasArcIntersection) {\n        var arcIntersection = circleIntersection[sign > 0 ? 1 : 0];\n        leftMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n        rightMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n      } else {\n        var hasLeftLineRightArcIntersection = cr[\"\".concat(side, \"Right\")] > cr[\"\".concat(side, \"Left\")];\n        if (hasLeftLineRightArcIntersection) {\n          var newY = rightCircle.solveY(x0)[isTop ? 0 : 1];\n          leftPoint = {\n            x: x0,\n            y: newY\n          };\n          leftMiddlePoint = {\n            x: x0,\n            y: newY\n          };\n          rightMiddlePoint = {\n            x: x0,\n            y: newY\n          };\n        } else {\n          var _newY = leftCircle.solveY(x1)[isTop ? 0 : 1];\n          rightPoint = {\n            x: x1,\n            y: _newY\n          };\n          rightMiddlePoint = {\n            x: x1,\n            y: _newY\n          };\n          leftMiddlePoint = {\n            x: x1,\n            y: _newY\n          };\n        }\n      }\n    }\n    return [leftPoint, leftMiddlePoint, rightMiddlePoint, rightPoint];\n  };\n  var topPoints = getHalfPoints(\"top\");\n  var bottomPoints = getHalfPoints(\"bottom\"); // eslint-disable-next-line no-magic-numbers\n\n  return [bottomPoints[1], bottomPoints[0]].concat(_toConsumableArray(topPoints), [bottomPoints[3], bottomPoints[2]]);\n};\nexport var getVerticalBarPath = function getVerticalBarPath(props, width, cornerRadius) {\n  var position = getPosition(props, width);\n  var sign = position.y0 > position.y1 ? 1 : -1;\n  var direction = sign > 0 ? \"0 0 1\" : \"0 0 0\";\n  var points = getVerticalBarPoints(position, sign, cornerRadius);\n  return mapPointsToPath(points, cornerRadius, direction);\n};\nexport var getHorizontalBarPath = function getHorizontalBarPath(props, width, cornerRadius) {\n  var position = getPosition(props, width);\n  var sign = position.x0 < position.x1 ? 1 : -1;\n  var direction = \"0 0 1\";\n  var cr = {\n    topRight: sign > 0 ? cornerRadius.topLeft : cornerRadius.bottomLeft,\n    bottomRight: sign > 0 ? cornerRadius.topRight : cornerRadius.bottomRight,\n    bottomLeft: sign > 0 ? cornerRadius.bottomRight : cornerRadius.topRight,\n    topLeft: sign > 0 ? cornerRadius.bottomLeft : cornerRadius.topLeft\n  };\n  var points = getHorizontalBarPoints(position, sign, cr);\n  return mapPointsToPath(points, cr, direction);\n};\nexport var getVerticalPolarBarPath = function getVerticalPolarBarPath(props, cornerRadius) {\n  var datum = props.datum,\n    scale = props.scale,\n    index = props.index,\n    alignment = props.alignment,\n    style = props.style;\n  var r1 = scale.y(datum._y0 || 0);\n  var r2 = scale.y(datum._y1 !== undefined ? datum._y1 : datum._y);\n  var currentAngle = scale.x(datum._x1 !== undefined ? datum._x1 : datum._x);\n  var start;\n  var end;\n  if (style.width) {\n    var width = getAngularWidth(props, style.width);\n    var size = alignment === \"middle\" ? width / 2 : width;\n    start = alignment === \"start\" ? currentAngle : currentAngle - size;\n    end = alignment === \"end\" ? currentAngle : currentAngle + size;\n  } else {\n    start = getStartAngle(props, index);\n    end = getEndAngle(props, index);\n  }\n  var getPath = function getPath(edge) {\n    var pathFunction = d3Shape.arc().innerRadius(r1).outerRadius(r2).startAngle(transformAngle(start)).endAngle(transformAngle(end)).cornerRadius(cornerRadius[edge]);\n    return pathFunction();\n  };\n  var getPathData = function getPathData(edge) {\n    var rightPath = getPath(\"\".concat(edge, \"Right\"));\n    var rightMoves = rightPath.match(/[A-Z]/g);\n    var rightCoords = rightPath.split(/[A-Z]/).slice(1);\n    var rightMiddle = rightMoves.indexOf(\"L\");\n    var leftPath = getPath(\"\".concat(edge, \"Left\"));\n    var leftMoves = leftPath.match(/[A-Z]/g);\n    var leftCoords = leftPath.split(/[A-Z]/).slice(1);\n    var leftMiddle = leftMoves.indexOf(\"L\");\n    return {\n      rightMoves: rightMoves,\n      rightCoords: rightCoords,\n      rightMiddle: rightMiddle,\n      leftMoves: leftMoves,\n      leftCoords: leftCoords,\n      leftMiddle: leftMiddle\n    };\n  }; // eslint-disable-next-line max-statements\n\n  var getTopPath = function getTopPath() {\n    var topRight = cornerRadius.topRight,\n      topLeft = cornerRadius.topLeft;\n    var arcLength = r2 * Math.abs(end - start);\n    var _getPathData = getPathData(\"top\"),\n      rightMoves = _getPathData.rightMoves,\n      rightCoords = _getPathData.rightCoords,\n      rightMiddle = _getPathData.rightMiddle,\n      leftMoves = _getPathData.leftMoves,\n      leftCoords = _getPathData.leftCoords,\n      leftMiddle = _getPathData.leftMiddle;\n    var moves;\n    var coords;\n    if (topRight === topLeft || arcLength < 2 * topRight + 2 * topLeft) {\n      moves = topRight > topLeft ? rightMoves : leftMoves;\n      coords = topRight > topLeft ? rightCoords : leftCoords;\n    } else {\n      // eslint-disable-next-line no-magic-numbers\n      var isShort = function isShort(middle) {\n        return middle < 3;\n      };\n      var rightOffset = topLeft > topRight && isShort(rightMiddle) ? 1 : 2;\n      var leftOffset;\n      if (topRight > topLeft) {\n        var defaultOffset = isShort(rightMiddle) ? leftMiddle : leftMiddle - 2;\n        leftOffset = isShort(leftMiddle) ? leftMiddle - 1 : defaultOffset;\n      } else {\n        var _defaultOffset = isShort(leftMiddle) ? 1 : 2;\n        leftOffset = isShort(rightMiddle) ? _defaultOffset : leftMiddle - 2;\n      }\n      moves = _toConsumableArray(rightMoves.slice(0, rightOffset)).concat(_toConsumableArray(leftMoves.slice(leftOffset)));\n      coords = _toConsumableArray(rightCoords.slice(0, rightOffset)).concat(_toConsumableArray(leftCoords.slice(leftOffset)));\n    }\n    var middle = moves.indexOf(\"L\");\n    var subMoves = moves.slice(0, middle);\n    var subCoords = coords.slice(0, middle);\n    return subMoves.map(function (m, i) {\n      return {\n        command: m,\n        coords: subCoords[i].split(\",\")\n      };\n    });\n  }; // eslint-disable-next-line max-statements\n\n  var getBottomPath = function getBottomPath() {\n    var bottomRight = cornerRadius.bottomRight,\n      bottomLeft = cornerRadius.bottomLeft;\n    var arcLength = r1 * Math.abs(end - start);\n    var _getPathData2 = getPathData(\"bottom\"),\n      rightMoves = _getPathData2.rightMoves,\n      rightCoords = _getPathData2.rightCoords,\n      rightMiddle = _getPathData2.rightMiddle,\n      leftMoves = _getPathData2.leftMoves,\n      leftCoords = _getPathData2.leftCoords,\n      leftMiddle = _getPathData2.leftMiddle;\n    var moves;\n    var coords;\n    if (bottomRight === bottomLeft || arcLength < 2 * bottomRight + 2 * bottomLeft) {\n      moves = bottomRight > bottomLeft ? rightMoves : leftMoves;\n      coords = bottomRight > bottomLeft ? rightCoords : leftCoords;\n    } else {\n      // eslint-disable-next-line no-magic-numbers\n      var isShort = function isShort(m, middle) {\n        return m.length - middle < 4;\n      };\n      var shortPath = bottomRight > bottomLeft ? isShort(rightMoves, rightMiddle) : isShort(leftMoves, leftMiddle); // eslint-disable-next-line no-magic-numbers\n\n      var rightOffset = shortPath ? -1 : -3;\n      moves = _toConsumableArray(leftMoves.slice(0, leftMiddle + 2)).concat(_toConsumableArray(rightMoves.slice(rightOffset)));\n      coords = _toConsumableArray(leftCoords.slice(0, leftMiddle + 2)).concat(_toConsumableArray(rightCoords.slice(rightOffset)));\n    }\n    var middle = moves.indexOf(\"L\");\n    var subMoves = moves.slice(middle, -1);\n    var subCoords = coords.slice(middle, -1);\n    return subMoves.map(function (m, i) {\n      return {\n        command: m,\n        coords: subCoords[i].split(\",\")\n      };\n    });\n  };\n  var topPath = getTopPath();\n  var bottomPath = getBottomPath();\n  var moves = _toConsumableArray(topPath).concat(_toConsumableArray(bottomPath));\n  var path = moves.reduce(function (memo, move) {\n    memo += \"\".concat(move.command, \" \").concat(move.coords.join());\n    return memo;\n  }, \"\");\n  return \"\".concat(path, \" z\");\n};","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","arr2","d3Shape","circle","point","getPosition","props","width","x","x0","y","y0","horizontal","alignment","size","sign","x1","y1","getAngle","index","data","scale","_x1","undefined","getAngularWidth","range","r","Math","max","apply","angularRange","abs","PI","transformAngle","angle","getCustomBarPath","getPath","propsWithCalculatedValues","getStartAngle","currentAngle","previousAngle","getEndAngle","lastAngle","nextAngle","mapPointsToPath","coords","cornerRadius","direction","topLeftPath","topLeft","topRightPath","topRight","bottomLeftPath","bottomLeft","bottomRightPath","bottomRight","commands","path","reduce","acc","command","getVerticalBarPoints","position","cr","getHalfPoints","side","isLeft","signL","bottomPoint","bottomMiddlePoint","topMiddlePoint","topPoint","hasIntersection","topCenter","topCircle","bottomCenter","bottomCircle","circleIntersection","intersection","hasArcIntersection","arcIntersection","hasBottomLineTopArcIntersection","newX","solveX","_newX","points","reverse","getHorizontalBarPoints","isTop","leftPoint","leftMiddlePoint","rightMiddlePoint","rightPoint","leftCenter","leftCircle","rightCenter","rightCircle","hasLeftLineRightArcIntersection","newY","solveY","_newY","topPoints","bottomPoints","getVerticalBarPath","getHorizontalBarPath","getVerticalPolarBarPath","datum","style","r1","_y0","r2","_y1","_y","_x","start","end","edge","pathFunction","arc","innerRadius","outerRadius","startAngle","endAngle","getPathData","rightPath","rightMoves","match","rightCoords","split","slice","rightMiddle","indexOf","leftPath","leftMoves","leftCoords","leftMiddle","getTopPath","arcLength","_getPathData","moves","isShort","middle","rightOffset","leftOffset","defaultOffset","_defaultOffset","subMoves","subCoords","map","m","getBottomPath","_getPathData2","shortPath","topPath","bottomPath","memo","move","join"],"sources":["/root/experiment/nova-explorer/node_modules/victory-bar/es/path-helper-methods.js"],"sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport * as d3Shape from \"d3-shape\";\nimport { circle, point } from \"./geometry-helper-methods\";\n\nvar getPosition = function (props, width) {\n  var x = props.x,\n      x0 = props.x0,\n      y = props.y,\n      y0 = props.y0,\n      horizontal = props.horizontal;\n  var alignment = props.alignment || \"middle\";\n  var size = alignment === \"middle\" ? width / 2 : width;\n  var sign = horizontal ? -1 : 1;\n\n  if (horizontal) {\n    return {\n      x0: x0,\n      x1: x,\n      y0: alignment === \"start\" ? y : y - sign * size,\n      y1: alignment === \"end\" ? y : y + sign * size\n    };\n  }\n\n  return {\n    x0: alignment === \"start\" ? x : x - sign * size,\n    x1: alignment === \"end\" ? x : x + sign * size,\n    y0: y0,\n    y1: y\n  };\n};\n\nvar getAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale;\n  var x = data[index]._x1 === undefined ? \"_x\" : \"_x1\";\n  return scale.x(data[index][x]);\n};\n\nvar getAngularWidth = function (props, width) {\n  var scale = props.scale;\n  var range = scale.y.range();\n  var r = Math.max.apply(Math, _toConsumableArray(range));\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  return width / (2 * Math.PI * r) * angularRange;\n};\n\nvar transformAngle = function (angle) {\n  return -1 * angle + Math.PI / 2;\n};\n\nexport var getCustomBarPath = function (props, width) {\n  var getPath = props.getPath;\n\n  var propsWithCalculatedValues = _objectSpread({}, props, getPosition(props, width));\n\n  return getPath(propsWithCalculatedValues);\n};\n\nvar getStartAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale,\n      alignment = props.alignment;\n  var currentAngle = getAngle(props, index);\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  var previousAngle = index === 0 ? getAngle(props, data.length - 1) - Math.PI * 2 : getAngle(props, index - 1);\n\n  if (index === 0 && angularRange < 2 * Math.PI) {\n    return scale.x.range()[0];\n  } else if (alignment === \"start\" || alignment === \"end\") {\n    return alignment === \"start\" ? previousAngle : currentAngle;\n  } else {\n    return (currentAngle + previousAngle) / 2;\n  }\n};\n\nvar getEndAngle = function (props, index) {\n  var data = props.data,\n      scale = props.scale,\n      alignment = props.alignment;\n  var currentAngle = getAngle(props, index);\n  var angularRange = Math.abs(scale.x.range()[1] - scale.x.range()[0]);\n  var lastAngle = scale.x.range()[1] === 2 * Math.PI ? getAngle(props, 0) + Math.PI * 2 : scale.x.range()[1];\n  var nextAngle = index === data.length - 1 ? getAngle(props, 0) + Math.PI * 2 : getAngle(props, index + 1);\n\n  if (index === data.length - 1 && angularRange < 2 * Math.PI) {\n    return lastAngle;\n  } else if (alignment === \"start\" || alignment === \"end\") {\n    return alignment === \"start\" ? currentAngle : nextAngle;\n  } else {\n    return (currentAngle + nextAngle) / 2;\n  }\n};\n\nvar mapPointsToPath = function (coords, cornerRadius, direction) {\n  var topLeftPath = \"\".concat(cornerRadius.topLeft, \" \").concat(cornerRadius.topLeft, \" \").concat(direction);\n  var topRightPath = \"\".concat(cornerRadius.topRight, \" \").concat(cornerRadius.topRight, \" \").concat(direction);\n  var bottomLeftPath = \"\".concat(cornerRadius.bottomLeft, \" \").concat(cornerRadius.bottomLeft, \" \").concat(direction);\n  var bottomRightPath = \"\".concat(cornerRadius.bottomRight, \" \").concat(cornerRadius.bottomRight, \" \").concat(direction);\n  var commands = [\"M\", \"A \".concat(bottomLeftPath, \",\"), \"L\", \"A \".concat(topLeftPath, \",\"), \"L\", \"A \".concat(topRightPath, \",\"), \"L\", \"A \".concat(bottomRightPath, \",\")];\n  var path = commands.reduce(function (acc, command, i) {\n    acc += \"\".concat(command, \" \").concat(coords[i].x, \", \").concat(coords[i].y, \" \\n\");\n    return acc;\n  }, \"\");\n  return \"\".concat(path, \" z\");\n};\n\nvar getVerticalBarPoints = function (position, sign, cr) {\n  var x0 = position.x0,\n      x1 = position.x1,\n      y0 = position.y0,\n      y1 = position.y1; // eslint-disable-next-line max-statements, max-len\n\n  var getHalfPoints = function (side) {\n    var isLeft = side === \"Left\";\n    var signL = isLeft ? 1 : -1;\n    var x = isLeft ? x0 : x1;\n    var bottomPoint = {\n      x: x + signL * cr[\"bottom\".concat(side)],\n      y: y0\n    };\n    var bottomMiddlePoint = {\n      x: x,\n      y: y0 - sign * cr[\"bottom\".concat(side)]\n    };\n    var topMiddlePoint = {\n      x: x,\n      y: y1 + sign * cr[\"top\".concat(side)]\n    };\n    var topPoint = {\n      x: x + signL * cr[\"top\".concat(side)],\n      y: y1\n    };\n    var hasIntersection = sign === 1 ? y0 - cr[\"bottom\".concat(side)] < y1 + cr[\"top\".concat(side)] : y0 + cr[\"bottom\".concat(side)] > y1 - cr[\"top\".concat(side)];\n\n    if (hasIntersection) {\n      var topCenter = point(x + signL * cr[\"top\".concat(side)], y1 + sign * cr[\"top\".concat(side)]);\n      var topCircle = circle(topCenter, cr[\"top\".concat(side)]);\n      var bottomCenter = point(x + signL * cr[\"bottom\".concat(side)], y0 - sign * cr[\"bottom\".concat(side)]);\n      var bottomCircle = circle(bottomCenter, cr[\"bottom\".concat(side)]);\n      var circleIntersection = topCircle.intersection(bottomCircle);\n      var hasArcIntersection = circleIntersection.length > 0;\n\n      if (hasArcIntersection) {\n        var arcIntersection = circleIntersection[isLeft ? 0 : 1];\n        bottomMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n        topMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n      } else {\n        var hasBottomLineTopArcIntersection = cr[\"top\".concat(side)] > cr[\"bottom\".concat(side)];\n\n        if (hasBottomLineTopArcIntersection) {\n          var newX = topCircle.solveX(y0)[isLeft ? 0 : 1];\n          bottomPoint = {\n            x: newX,\n            y: y0\n          };\n          bottomMiddlePoint = {\n            x: newX,\n            y: y0\n          };\n          topMiddlePoint = {\n            x: newX,\n            y: y0\n          };\n        } else {\n          var _newX = bottomCircle.solveX(y1)[isLeft ? 0 : 1];\n          bottomMiddlePoint = {\n            x: _newX,\n            y: y1\n          };\n          topMiddlePoint = {\n            x: _newX,\n            y: y1\n          };\n          topPoint = {\n            x: _newX,\n            y: y1\n          };\n        }\n      }\n    }\n\n    var points = [bottomPoint, bottomMiddlePoint, topMiddlePoint, topPoint];\n    return isLeft ? points : points.reverse();\n  };\n\n  return getHalfPoints(\"Left\").concat(getHalfPoints(\"Right\"));\n};\n\nvar getHorizontalBarPoints = function (position, sign, cr) {\n  var y0 = position.y0,\n      y1 = position.y1;\n  var x0 = position.x0 < position.x1 ? position.x0 : position.x1;\n  var x1 = position.x0 < position.x1 ? position.x1 : position.x0; // eslint-disable-next-line max-statements, max-len\n\n  var getHalfPoints = function (side) {\n    var isTop = side === \"top\";\n    var signL = isTop ? -1 : 1;\n    var y = isTop ? y1 : y0;\n    var leftPoint = {\n      x: x0,\n      y: y - signL * cr[\"\".concat(side, \"Left\")]\n    };\n    var leftMiddlePoint = {\n      x: x0 + cr[\"\".concat(side, \"Left\")],\n      y: y\n    };\n    var rightMiddlePoint = {\n      x: x1 - cr[\"\".concat(side, \"Right\")],\n      y: y\n    };\n    var rightPoint = {\n      x: x1,\n      y: y - signL * cr[\"\".concat(side, \"Right\")]\n    };\n    var hasIntersection = leftMiddlePoint.x > rightMiddlePoint.x;\n\n    if (hasIntersection) {\n      var leftCenter = point(x0 + cr[\"\".concat(side, \"Left\")], y - signL * cr[\"\".concat(side, \"Left\")]);\n      var leftCircle = circle(leftCenter, cr[\"\".concat(side, \"Left\")]);\n      var rightCenter = point(x1 - cr[\"\".concat(side, \"Right\")], y - signL * cr[\"\".concat(side, \"Right\")]);\n      var rightCircle = circle(rightCenter, cr[\"\".concat(side, \"Right\")]);\n      var circleIntersection = leftCircle.intersection(rightCircle);\n      var hasArcIntersection = circleIntersection.length > 0;\n\n      if (hasArcIntersection) {\n        var arcIntersection = circleIntersection[sign > 0 ? 1 : 0];\n        leftMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n        rightMiddlePoint = {\n          x: arcIntersection.x,\n          y: arcIntersection.y\n        };\n      } else {\n        var hasLeftLineRightArcIntersection = cr[\"\".concat(side, \"Right\")] > cr[\"\".concat(side, \"Left\")];\n\n        if (hasLeftLineRightArcIntersection) {\n          var newY = rightCircle.solveY(x0)[isTop ? 0 : 1];\n          leftPoint = {\n            x: x0,\n            y: newY\n          };\n          leftMiddlePoint = {\n            x: x0,\n            y: newY\n          };\n          rightMiddlePoint = {\n            x: x0,\n            y: newY\n          };\n        } else {\n          var _newY = leftCircle.solveY(x1)[isTop ? 0 : 1];\n          rightPoint = {\n            x: x1,\n            y: _newY\n          };\n          rightMiddlePoint = {\n            x: x1,\n            y: _newY\n          };\n          leftMiddlePoint = {\n            x: x1,\n            y: _newY\n          };\n        }\n      }\n    }\n\n    return [leftPoint, leftMiddlePoint, rightMiddlePoint, rightPoint];\n  };\n\n  var topPoints = getHalfPoints(\"top\");\n  var bottomPoints = getHalfPoints(\"bottom\"); // eslint-disable-next-line no-magic-numbers\n\n  return [bottomPoints[1], bottomPoints[0]].concat(_toConsumableArray(topPoints), [bottomPoints[3], bottomPoints[2]]);\n};\n\nexport var getVerticalBarPath = function (props, width, cornerRadius) {\n  var position = getPosition(props, width);\n  var sign = position.y0 > position.y1 ? 1 : -1;\n  var direction = sign > 0 ? \"0 0 1\" : \"0 0 0\";\n  var points = getVerticalBarPoints(position, sign, cornerRadius);\n  return mapPointsToPath(points, cornerRadius, direction);\n};\nexport var getHorizontalBarPath = function (props, width, cornerRadius) {\n  var position = getPosition(props, width);\n  var sign = position.x0 < position.x1 ? 1 : -1;\n  var direction = \"0 0 1\";\n  var cr = {\n    topRight: sign > 0 ? cornerRadius.topLeft : cornerRadius.bottomLeft,\n    bottomRight: sign > 0 ? cornerRadius.topRight : cornerRadius.bottomRight,\n    bottomLeft: sign > 0 ? cornerRadius.bottomRight : cornerRadius.topRight,\n    topLeft: sign > 0 ? cornerRadius.bottomLeft : cornerRadius.topLeft\n  };\n  var points = getHorizontalBarPoints(position, sign, cr);\n  return mapPointsToPath(points, cr, direction);\n};\nexport var getVerticalPolarBarPath = function (props, cornerRadius) {\n  var datum = props.datum,\n      scale = props.scale,\n      index = props.index,\n      alignment = props.alignment,\n      style = props.style;\n  var r1 = scale.y(datum._y0 || 0);\n  var r2 = scale.y(datum._y1 !== undefined ? datum._y1 : datum._y);\n  var currentAngle = scale.x(datum._x1 !== undefined ? datum._x1 : datum._x);\n  var start;\n  var end;\n\n  if (style.width) {\n    var width = getAngularWidth(props, style.width);\n    var size = alignment === \"middle\" ? width / 2 : width;\n    start = alignment === \"start\" ? currentAngle : currentAngle - size;\n    end = alignment === \"end\" ? currentAngle : currentAngle + size;\n  } else {\n    start = getStartAngle(props, index);\n    end = getEndAngle(props, index);\n  }\n\n  var getPath = function (edge) {\n    var pathFunction = d3Shape.arc().innerRadius(r1).outerRadius(r2).startAngle(transformAngle(start)).endAngle(transformAngle(end)).cornerRadius(cornerRadius[edge]);\n    return pathFunction();\n  };\n\n  var getPathData = function (edge) {\n    var rightPath = getPath(\"\".concat(edge, \"Right\"));\n    var rightMoves = rightPath.match(/[A-Z]/g);\n    var rightCoords = rightPath.split(/[A-Z]/).slice(1);\n    var rightMiddle = rightMoves.indexOf(\"L\");\n    var leftPath = getPath(\"\".concat(edge, \"Left\"));\n    var leftMoves = leftPath.match(/[A-Z]/g);\n    var leftCoords = leftPath.split(/[A-Z]/).slice(1);\n    var leftMiddle = leftMoves.indexOf(\"L\");\n    return {\n      rightMoves: rightMoves,\n      rightCoords: rightCoords,\n      rightMiddle: rightMiddle,\n      leftMoves: leftMoves,\n      leftCoords: leftCoords,\n      leftMiddle: leftMiddle\n    };\n  }; // eslint-disable-next-line max-statements\n\n\n  var getTopPath = function () {\n    var topRight = cornerRadius.topRight,\n        topLeft = cornerRadius.topLeft;\n    var arcLength = r2 * Math.abs(end - start);\n\n    var _getPathData = getPathData(\"top\"),\n        rightMoves = _getPathData.rightMoves,\n        rightCoords = _getPathData.rightCoords,\n        rightMiddle = _getPathData.rightMiddle,\n        leftMoves = _getPathData.leftMoves,\n        leftCoords = _getPathData.leftCoords,\n        leftMiddle = _getPathData.leftMiddle;\n\n    var moves;\n    var coords;\n\n    if (topRight === topLeft || arcLength < 2 * topRight + 2 * topLeft) {\n      moves = topRight > topLeft ? rightMoves : leftMoves;\n      coords = topRight > topLeft ? rightCoords : leftCoords;\n    } else {\n      // eslint-disable-next-line no-magic-numbers\n      var isShort = function (middle) {\n        return middle < 3;\n      };\n\n      var rightOffset = topLeft > topRight && isShort(rightMiddle) ? 1 : 2;\n      var leftOffset;\n\n      if (topRight > topLeft) {\n        var defaultOffset = isShort(rightMiddle) ? leftMiddle : leftMiddle - 2;\n        leftOffset = isShort(leftMiddle) ? leftMiddle - 1 : defaultOffset;\n      } else {\n        var _defaultOffset = isShort(leftMiddle) ? 1 : 2;\n\n        leftOffset = isShort(rightMiddle) ? _defaultOffset : leftMiddle - 2;\n      }\n\n      moves = _toConsumableArray(rightMoves.slice(0, rightOffset)).concat(_toConsumableArray(leftMoves.slice(leftOffset)));\n      coords = _toConsumableArray(rightCoords.slice(0, rightOffset)).concat(_toConsumableArray(leftCoords.slice(leftOffset)));\n    }\n\n    var middle = moves.indexOf(\"L\");\n    var subMoves = moves.slice(0, middle);\n    var subCoords = coords.slice(0, middle);\n    return subMoves.map(function (m, i) {\n      return {\n        command: m,\n        coords: subCoords[i].split(\",\")\n      };\n    });\n  }; // eslint-disable-next-line max-statements\n\n\n  var getBottomPath = function () {\n    var bottomRight = cornerRadius.bottomRight,\n        bottomLeft = cornerRadius.bottomLeft;\n    var arcLength = r1 * Math.abs(end - start);\n\n    var _getPathData2 = getPathData(\"bottom\"),\n        rightMoves = _getPathData2.rightMoves,\n        rightCoords = _getPathData2.rightCoords,\n        rightMiddle = _getPathData2.rightMiddle,\n        leftMoves = _getPathData2.leftMoves,\n        leftCoords = _getPathData2.leftCoords,\n        leftMiddle = _getPathData2.leftMiddle;\n\n    var moves;\n    var coords;\n\n    if (bottomRight === bottomLeft || arcLength < 2 * bottomRight + 2 * bottomLeft) {\n      moves = bottomRight > bottomLeft ? rightMoves : leftMoves;\n      coords = bottomRight > bottomLeft ? rightCoords : leftCoords;\n    } else {\n      // eslint-disable-next-line no-magic-numbers\n      var isShort = function (m, middle) {\n        return m.length - middle < 4;\n      };\n\n      var shortPath = bottomRight > bottomLeft ? isShort(rightMoves, rightMiddle) : isShort(leftMoves, leftMiddle); // eslint-disable-next-line no-magic-numbers\n\n      var rightOffset = shortPath ? -1 : -3;\n      moves = _toConsumableArray(leftMoves.slice(0, leftMiddle + 2)).concat(_toConsumableArray(rightMoves.slice(rightOffset)));\n      coords = _toConsumableArray(leftCoords.slice(0, leftMiddle + 2)).concat(_toConsumableArray(rightCoords.slice(rightOffset)));\n    }\n\n    var middle = moves.indexOf(\"L\");\n    var subMoves = moves.slice(middle, -1);\n    var subCoords = coords.slice(middle, -1);\n    return subMoves.map(function (m, i) {\n      return {\n        command: m,\n        coords: subCoords[i].split(\",\")\n      };\n    });\n  };\n\n  var topPath = getTopPath();\n  var bottomPath = getBottomPath();\n\n  var moves = _toConsumableArray(topPath).concat(_toConsumableArray(bottomPath));\n\n  var path = moves.reduce(function (memo, move) {\n    memo += \"\".concat(move.command, \" \").concat(move.coords.join());\n    return memo;\n  }, \"\");\n  return \"\".concat(path, \" z\");\n};"],"mappings":"AAAA,SAASA,aAAaA,CAACC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC,IAAI,IAAI,GAAGC,SAAS,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;IAAE,IAAII,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC;IAAE,IAAI,OAAOE,MAAM,CAACE,qBAAqB,KAAK,UAAU,EAAE;MAAEH,OAAO,GAAGA,OAAO,CAACI,MAAM,CAACH,MAAM,CAACE,qBAAqB,CAACJ,MAAM,CAAC,CAACM,MAAM,CAAC,UAAUC,GAAG,EAAE;QAAE,OAAOL,MAAM,CAACM,wBAAwB,CAACR,MAAM,EAAEO,GAAG,CAAC,CAACE,UAAU;MAAE,CAAC,CAAC,CAAC;IAAE;IAAER,OAAO,CAACS,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEC,eAAe,CAAChB,MAAM,EAAEe,GAAG,EAAEX,MAAM,CAACW,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAOf,MAAM;AAAE;AAEhe,SAASgB,eAAeA,CAACC,GAAG,EAAEF,GAAG,EAAEG,KAAK,EAAE;EAAE,IAAIH,GAAG,IAAIE,GAAG,EAAE;IAAEX,MAAM,CAACa,cAAc,CAACF,GAAG,EAAEF,GAAG,EAAE;MAAEG,KAAK,EAAEA,KAAK;MAAEL,UAAU,EAAE,IAAI;MAAEO,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEJ,GAAG,CAACF,GAAG,CAAC,GAAGG,KAAK;EAAE;EAAE,OAAOD,GAAG;AAAE;AAEhN,SAASK,kBAAkBA,CAACC,GAAG,EAAE;EAAE,OAAOC,kBAAkB,CAACD,GAAG,CAAC,IAAIE,gBAAgB,CAACF,GAAG,CAAC,IAAIG,kBAAkB,CAAC,CAAC;AAAE;AAEpH,SAASA,kBAAkBA,CAAA,EAAG;EAAE,MAAM,IAAIC,SAAS,CAAC,iDAAiD,CAAC;AAAE;AAExG,SAASF,gBAAgBA,CAACG,IAAI,EAAE;EAAE,IAAIC,MAAM,CAACC,QAAQ,IAAIxB,MAAM,CAACsB,IAAI,CAAC,IAAItB,MAAM,CAACyB,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACL,IAAI,CAAC,KAAK,oBAAoB,EAAE,OAAOM,KAAK,CAACC,IAAI,CAACP,IAAI,CAAC;AAAE;AAEjK,SAASJ,kBAAkBA,CAACD,GAAG,EAAE;EAAE,IAAIW,KAAK,CAACE,OAAO,CAACb,GAAG,CAAC,EAAE;IAAE,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEoC,IAAI,GAAG,IAAIH,KAAK,CAACX,GAAG,CAACpB,MAAM,CAAC,EAAEF,CAAC,GAAGsB,GAAG,CAACpB,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAEoC,IAAI,CAACpC,CAAC,CAAC,GAAGsB,GAAG,CAACtB,CAAC,CAAC;IAAE;IAAE,OAAOoC,IAAI;EAAE;AAAE;AAErK,OAAO,KAAKC,OAAO,MAAM,UAAU;AACnC,SAASC,MAAM,EAAEC,KAAK,QAAQ,2BAA2B;AAEzD,IAAIC,WAAW,GAAG,SAAdA,WAAWA,CAAaC,KAAK,EAAEC,KAAK,EAAE;EACxC,IAAIC,CAAC,GAAGF,KAAK,CAACE,CAAC;IACXC,EAAE,GAAGH,KAAK,CAACG,EAAE;IACbC,CAAC,GAAGJ,KAAK,CAACI,CAAC;IACXC,EAAE,GAAGL,KAAK,CAACK,EAAE;IACbC,UAAU,GAAGN,KAAK,CAACM,UAAU;EACjC,IAAIC,SAAS,GAAGP,KAAK,CAACO,SAAS,IAAI,QAAQ;EAC3C,IAAIC,IAAI,GAAGD,SAAS,KAAK,QAAQ,GAAGN,KAAK,GAAG,CAAC,GAAGA,KAAK;EACrD,IAAIQ,IAAI,GAAGH,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;EAE9B,IAAIA,UAAU,EAAE;IACd,OAAO;MACLH,EAAE,EAAEA,EAAE;MACNO,EAAE,EAAER,CAAC;MACLG,EAAE,EAAEE,SAAS,KAAK,OAAO,GAAGH,CAAC,GAAGA,CAAC,GAAGK,IAAI,GAAGD,IAAI;MAC/CG,EAAE,EAAEJ,SAAS,KAAK,KAAK,GAAGH,CAAC,GAAGA,CAAC,GAAGK,IAAI,GAAGD;IAC3C,CAAC;EACH;EAEA,OAAO;IACLL,EAAE,EAAEI,SAAS,KAAK,OAAO,GAAGL,CAAC,GAAGA,CAAC,GAAGO,IAAI,GAAGD,IAAI;IAC/CE,EAAE,EAAEH,SAAS,KAAK,KAAK,GAAGL,CAAC,GAAGA,CAAC,GAAGO,IAAI,GAAGD,IAAI;IAC7CH,EAAE,EAAEA,EAAE;IACNM,EAAE,EAAEP;EACN,CAAC;AACH,CAAC;AAED,IAAIQ,QAAQ,GAAG,SAAXA,QAAQA,CAAaZ,KAAK,EAAEa,KAAK,EAAE;EACrC,IAAIC,IAAI,GAAGd,KAAK,CAACc,IAAI;IACjBC,KAAK,GAAGf,KAAK,CAACe,KAAK;EACvB,IAAIb,CAAC,GAAGY,IAAI,CAACD,KAAK,CAAC,CAACG,GAAG,KAAKC,SAAS,GAAG,IAAI,GAAG,KAAK;EACpD,OAAOF,KAAK,CAACb,CAAC,CAACY,IAAI,CAACD,KAAK,CAAC,CAACX,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,IAAIgB,eAAe,GAAG,SAAlBA,eAAeA,CAAalB,KAAK,EAAEC,KAAK,EAAE;EAC5C,IAAIc,KAAK,GAAGf,KAAK,CAACe,KAAK;EACvB,IAAII,KAAK,GAAGJ,KAAK,CAACX,CAAC,CAACe,KAAK,CAAC,CAAC;EAC3B,IAAIC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACC,KAAK,CAACF,IAAI,EAAEzC,kBAAkB,CAACuC,KAAK,CAAC,CAAC;EACvD,IAAIK,YAAY,GAAGH,IAAI,CAACI,GAAG,CAACV,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGJ,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,OAAOlB,KAAK,IAAI,CAAC,GAAGoB,IAAI,CAACK,EAAE,GAAGN,CAAC,CAAC,GAAGI,YAAY;AACjD,CAAC;AAED,IAAIG,cAAc,GAAG,SAAjBA,cAAcA,CAAaC,KAAK,EAAE;EACpC,OAAO,CAAC,CAAC,GAAGA,KAAK,GAAGP,IAAI,CAACK,EAAE,GAAG,CAAC;AACjC,CAAC;AAED,OAAO,IAAIG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAa7B,KAAK,EAAEC,KAAK,EAAE;EACpD,IAAI6B,OAAO,GAAG9B,KAAK,CAAC8B,OAAO;EAE3B,IAAIC,yBAAyB,GAAG1E,aAAa,CAAC,CAAC,CAAC,EAAE2C,KAAK,EAAED,WAAW,CAACC,KAAK,EAAEC,KAAK,CAAC,CAAC;EAEnF,OAAO6B,OAAO,CAACC,yBAAyB,CAAC;AAC3C,CAAC;AAED,IAAIC,aAAa,GAAG,SAAhBA,aAAaA,CAAahC,KAAK,EAAEa,KAAK,EAAE;EAC1C,IAAIC,IAAI,GAAGd,KAAK,CAACc,IAAI;IACjBC,KAAK,GAAGf,KAAK,CAACe,KAAK;IACnBR,SAAS,GAAGP,KAAK,CAACO,SAAS;EAC/B,IAAI0B,YAAY,GAAGrB,QAAQ,CAACZ,KAAK,EAAEa,KAAK,CAAC;EACzC,IAAIW,YAAY,GAAGH,IAAI,CAACI,GAAG,CAACV,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGJ,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,IAAIe,aAAa,GAAGrB,KAAK,KAAK,CAAC,GAAGD,QAAQ,CAACZ,KAAK,EAAEc,IAAI,CAACrD,MAAM,GAAG,CAAC,CAAC,GAAG4D,IAAI,CAACK,EAAE,GAAG,CAAC,GAAGd,QAAQ,CAACZ,KAAK,EAAEa,KAAK,GAAG,CAAC,CAAC;EAE7G,IAAIA,KAAK,KAAK,CAAC,IAAIW,YAAY,GAAG,CAAC,GAAGH,IAAI,CAACK,EAAE,EAAE;IAC7C,OAAOX,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,MAAM,IAAIZ,SAAS,KAAK,OAAO,IAAIA,SAAS,KAAK,KAAK,EAAE;IACvD,OAAOA,SAAS,KAAK,OAAO,GAAG2B,aAAa,GAAGD,YAAY;EAC7D,CAAC,MAAM;IACL,OAAO,CAACA,YAAY,GAAGC,aAAa,IAAI,CAAC;EAC3C;AACF,CAAC;AAED,IAAIC,WAAW,GAAG,SAAdA,WAAWA,CAAanC,KAAK,EAAEa,KAAK,EAAE;EACxC,IAAIC,IAAI,GAAGd,KAAK,CAACc,IAAI;IACjBC,KAAK,GAAGf,KAAK,CAACe,KAAK;IACnBR,SAAS,GAAGP,KAAK,CAACO,SAAS;EAC/B,IAAI0B,YAAY,GAAGrB,QAAQ,CAACZ,KAAK,EAAEa,KAAK,CAAC;EACzC,IAAIW,YAAY,GAAGH,IAAI,CAACI,GAAG,CAACV,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGJ,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,IAAIiB,SAAS,GAAGrB,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAGE,IAAI,CAACK,EAAE,GAAGd,QAAQ,CAACZ,KAAK,EAAE,CAAC,CAAC,GAAGqB,IAAI,CAACK,EAAE,GAAG,CAAC,GAAGX,KAAK,CAACb,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1G,IAAIkB,SAAS,GAAGxB,KAAK,KAAKC,IAAI,CAACrD,MAAM,GAAG,CAAC,GAAGmD,QAAQ,CAACZ,KAAK,EAAE,CAAC,CAAC,GAAGqB,IAAI,CAACK,EAAE,GAAG,CAAC,GAAGd,QAAQ,CAACZ,KAAK,EAAEa,KAAK,GAAG,CAAC,CAAC;EAEzG,IAAIA,KAAK,KAAKC,IAAI,CAACrD,MAAM,GAAG,CAAC,IAAI+D,YAAY,GAAG,CAAC,GAAGH,IAAI,CAACK,EAAE,EAAE;IAC3D,OAAOU,SAAS;EAClB,CAAC,MAAM,IAAI7B,SAAS,KAAK,OAAO,IAAIA,SAAS,KAAK,KAAK,EAAE;IACvD,OAAOA,SAAS,KAAK,OAAO,GAAG0B,YAAY,GAAGI,SAAS;EACzD,CAAC,MAAM;IACL,OAAO,CAACJ,YAAY,GAAGI,SAAS,IAAI,CAAC;EACvC;AACF,CAAC;AAED,IAAIC,eAAe,GAAG,SAAlBA,eAAeA,CAAaC,MAAM,EAAEC,YAAY,EAAEC,SAAS,EAAE;EAC/D,IAAIC,WAAW,GAAG,EAAE,CAAC3E,MAAM,CAACyE,YAAY,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC5E,MAAM,CAACyE,YAAY,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC5E,MAAM,CAAC0E,SAAS,CAAC;EAC1G,IAAIG,YAAY,GAAG,EAAE,CAAC7E,MAAM,CAACyE,YAAY,CAACK,QAAQ,EAAE,GAAG,CAAC,CAAC9E,MAAM,CAACyE,YAAY,CAACK,QAAQ,EAAE,GAAG,CAAC,CAAC9E,MAAM,CAAC0E,SAAS,CAAC;EAC7G,IAAIK,cAAc,GAAG,EAAE,CAAC/E,MAAM,CAACyE,YAAY,CAACO,UAAU,EAAE,GAAG,CAAC,CAAChF,MAAM,CAACyE,YAAY,CAACO,UAAU,EAAE,GAAG,CAAC,CAAChF,MAAM,CAAC0E,SAAS,CAAC;EACnH,IAAIO,eAAe,GAAG,EAAE,CAACjF,MAAM,CAACyE,YAAY,CAACS,WAAW,EAAE,GAAG,CAAC,CAAClF,MAAM,CAACyE,YAAY,CAACS,WAAW,EAAE,GAAG,CAAC,CAAClF,MAAM,CAAC0E,SAAS,CAAC;EACtH,IAAIS,QAAQ,GAAG,CAAC,GAAG,EAAE,IAAI,CAACnF,MAAM,CAAC+E,cAAc,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC/E,MAAM,CAAC2E,WAAW,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC3E,MAAM,CAAC6E,YAAY,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC7E,MAAM,CAACiF,eAAe,EAAE,GAAG,CAAC,CAAC;EACvK,IAAIG,IAAI,GAAGD,QAAQ,CAACE,MAAM,CAAC,UAAUC,GAAG,EAAEC,OAAO,EAAE/F,CAAC,EAAE;IACpD8F,GAAG,IAAI,EAAE,CAACtF,MAAM,CAACuF,OAAO,EAAE,GAAG,CAAC,CAACvF,MAAM,CAACwE,MAAM,CAAChF,CAAC,CAAC,CAAC2C,CAAC,EAAE,IAAI,CAAC,CAACnC,MAAM,CAACwE,MAAM,CAAChF,CAAC,CAAC,CAAC6C,CAAC,EAAE,KAAK,CAAC;IACnF,OAAOiD,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,EAAE,CAACtF,MAAM,CAACoF,IAAI,EAAE,IAAI,CAAC;AAC9B,CAAC;AAED,IAAII,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAaC,QAAQ,EAAE/C,IAAI,EAAEgD,EAAE,EAAE;EACvD,IAAItD,EAAE,GAAGqD,QAAQ,CAACrD,EAAE;IAChBO,EAAE,GAAG8C,QAAQ,CAAC9C,EAAE;IAChBL,EAAE,GAAGmD,QAAQ,CAACnD,EAAE;IAChBM,EAAE,GAAG6C,QAAQ,CAAC7C,EAAE,CAAC,CAAC;;EAEtB,IAAI+C,aAAa,GAAG,SAAhBA,aAAaA,CAAaC,IAAI,EAAE;IAClC,IAAIC,MAAM,GAAGD,IAAI,KAAK,MAAM;IAC5B,IAAIE,KAAK,GAAGD,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAI1D,CAAC,GAAG0D,MAAM,GAAGzD,EAAE,GAAGO,EAAE;IACxB,IAAIoD,WAAW,GAAG;MAChB5D,CAAC,EAAEA,CAAC,GAAG2D,KAAK,GAAGJ,EAAE,CAAC,QAAQ,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC;MACxCvD,CAAC,EAAEC;IACL,CAAC;IACD,IAAI0D,iBAAiB,GAAG;MACtB7D,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEC,EAAE,GAAGI,IAAI,GAAGgD,EAAE,CAAC,QAAQ,CAAC1F,MAAM,CAAC4F,IAAI,CAAC;IACzC,CAAC;IACD,IAAIK,cAAc,GAAG;MACnB9D,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEO,EAAE,GAAGF,IAAI,GAAGgD,EAAE,CAAC,KAAK,CAAC1F,MAAM,CAAC4F,IAAI,CAAC;IACtC,CAAC;IACD,IAAIM,QAAQ,GAAG;MACb/D,CAAC,EAAEA,CAAC,GAAG2D,KAAK,GAAGJ,EAAE,CAAC,KAAK,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC;MACrCvD,CAAC,EAAEO;IACL,CAAC;IACD,IAAIuD,eAAe,GAAGzD,IAAI,KAAK,CAAC,GAAGJ,EAAE,GAAGoD,EAAE,CAAC,QAAQ,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,GAAGhD,EAAE,GAAG8C,EAAE,CAAC,KAAK,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,GAAGtD,EAAE,GAAGoD,EAAE,CAAC,QAAQ,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,GAAGhD,EAAE,GAAG8C,EAAE,CAAC,KAAK,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC;IAE9J,IAAIO,eAAe,EAAE;MACnB,IAAIC,SAAS,GAAGrE,KAAK,CAACI,CAAC,GAAG2D,KAAK,GAAGJ,EAAE,CAAC,KAAK,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,EAAEhD,EAAE,GAAGF,IAAI,GAAGgD,EAAE,CAAC,KAAK,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,CAAC;MAC7F,IAAIS,SAAS,GAAGvE,MAAM,CAACsE,SAAS,EAAEV,EAAE,CAAC,KAAK,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,CAAC;MACzD,IAAIU,YAAY,GAAGvE,KAAK,CAACI,CAAC,GAAG2D,KAAK,GAAGJ,EAAE,CAAC,QAAQ,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,EAAEtD,EAAE,GAAGI,IAAI,GAAGgD,EAAE,CAAC,QAAQ,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,CAAC;MACtG,IAAIW,YAAY,GAAGzE,MAAM,CAACwE,YAAY,EAAEZ,EAAE,CAAC,QAAQ,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,CAAC;MAClE,IAAIY,kBAAkB,GAAGH,SAAS,CAACI,YAAY,CAACF,YAAY,CAAC;MAC7D,IAAIG,kBAAkB,GAAGF,kBAAkB,CAAC9G,MAAM,GAAG,CAAC;MAEtD,IAAIgH,kBAAkB,EAAE;QACtB,IAAIC,eAAe,GAAGH,kBAAkB,CAACX,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QACxDG,iBAAiB,GAAG;UAClB7D,CAAC,EAAEwE,eAAe,CAACxE,CAAC;UACpBE,CAAC,EAAEsE,eAAe,CAACtE;QACrB,CAAC;QACD4D,cAAc,GAAG;UACf9D,CAAC,EAAEwE,eAAe,CAACxE,CAAC;UACpBE,CAAC,EAAEsE,eAAe,CAACtE;QACrB,CAAC;MACH,CAAC,MAAM;QACL,IAAIuE,+BAA+B,GAAGlB,EAAE,CAAC,KAAK,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC,GAAGF,EAAE,CAAC,QAAQ,CAAC1F,MAAM,CAAC4F,IAAI,CAAC,CAAC;QAExF,IAAIgB,+BAA+B,EAAE;UACnC,IAAIC,IAAI,GAAGR,SAAS,CAACS,MAAM,CAACxE,EAAE,CAAC,CAACuD,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;UAC/CE,WAAW,GAAG;YACZ5D,CAAC,EAAE0E,IAAI;YACPxE,CAAC,EAAEC;UACL,CAAC;UACD0D,iBAAiB,GAAG;YAClB7D,CAAC,EAAE0E,IAAI;YACPxE,CAAC,EAAEC;UACL,CAAC;UACD2D,cAAc,GAAG;YACf9D,CAAC,EAAE0E,IAAI;YACPxE,CAAC,EAAEC;UACL,CAAC;QACH,CAAC,MAAM;UACL,IAAIyE,KAAK,GAAGR,YAAY,CAACO,MAAM,CAAClE,EAAE,CAAC,CAACiD,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;UACnDG,iBAAiB,GAAG;YAClB7D,CAAC,EAAE4E,KAAK;YACR1E,CAAC,EAAEO;UACL,CAAC;UACDqD,cAAc,GAAG;YACf9D,CAAC,EAAE4E,KAAK;YACR1E,CAAC,EAAEO;UACL,CAAC;UACDsD,QAAQ,GAAG;YACT/D,CAAC,EAAE4E,KAAK;YACR1E,CAAC,EAAEO;UACL,CAAC;QACH;MACF;IACF;IAEA,IAAIoE,MAAM,GAAG,CAACjB,WAAW,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,QAAQ,CAAC;IACvE,OAAOL,MAAM,GAAGmB,MAAM,GAAGA,MAAM,CAACC,OAAO,CAAC,CAAC;EAC3C,CAAC;EAED,OAAOtB,aAAa,CAAC,MAAM,CAAC,CAAC3F,MAAM,CAAC2F,aAAa,CAAC,OAAO,CAAC,CAAC;AAC7D,CAAC;AAED,IAAIuB,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAazB,QAAQ,EAAE/C,IAAI,EAAEgD,EAAE,EAAE;EACzD,IAAIpD,EAAE,GAAGmD,QAAQ,CAACnD,EAAE;IAChBM,EAAE,GAAG6C,QAAQ,CAAC7C,EAAE;EACpB,IAAIR,EAAE,GAAGqD,QAAQ,CAACrD,EAAE,GAAGqD,QAAQ,CAAC9C,EAAE,GAAG8C,QAAQ,CAACrD,EAAE,GAAGqD,QAAQ,CAAC9C,EAAE;EAC9D,IAAIA,EAAE,GAAG8C,QAAQ,CAACrD,EAAE,GAAGqD,QAAQ,CAAC9C,EAAE,GAAG8C,QAAQ,CAAC9C,EAAE,GAAG8C,QAAQ,CAACrD,EAAE,CAAC,CAAC;;EAEhE,IAAIuD,aAAa,GAAG,SAAhBA,aAAaA,CAAaC,IAAI,EAAE;IAClC,IAAIuB,KAAK,GAAGvB,IAAI,KAAK,KAAK;IAC1B,IAAIE,KAAK,GAAGqB,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1B,IAAI9E,CAAC,GAAG8E,KAAK,GAAGvE,EAAE,GAAGN,EAAE;IACvB,IAAI8E,SAAS,GAAG;MACdjF,CAAC,EAAEC,EAAE;MACLC,CAAC,EAAEA,CAAC,GAAGyD,KAAK,GAAGJ,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,MAAM,CAAC;IAC3C,CAAC;IACD,IAAIyB,eAAe,GAAG;MACpBlF,CAAC,EAAEC,EAAE,GAAGsD,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,MAAM,CAAC,CAAC;MACnCvD,CAAC,EAAEA;IACL,CAAC;IACD,IAAIiF,gBAAgB,GAAG;MACrBnF,CAAC,EAAEQ,EAAE,GAAG+C,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,OAAO,CAAC,CAAC;MACpCvD,CAAC,EAAEA;IACL,CAAC;IACD,IAAIkF,UAAU,GAAG;MACfpF,CAAC,EAAEQ,EAAE;MACLN,CAAC,EAAEA,CAAC,GAAGyD,KAAK,GAAGJ,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,OAAO,CAAC;IAC5C,CAAC;IACD,IAAIO,eAAe,GAAGkB,eAAe,CAAClF,CAAC,GAAGmF,gBAAgB,CAACnF,CAAC;IAE5D,IAAIgE,eAAe,EAAE;MACnB,IAAIqB,UAAU,GAAGzF,KAAK,CAACK,EAAE,GAAGsD,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,MAAM,CAAC,CAAC,EAAEvD,CAAC,GAAGyD,KAAK,GAAGJ,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;MACjG,IAAI6B,UAAU,GAAG3F,MAAM,CAAC0F,UAAU,EAAE9B,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;MAChE,IAAI8B,WAAW,GAAG3F,KAAK,CAACY,EAAE,GAAG+C,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,OAAO,CAAC,CAAC,EAAEvD,CAAC,GAAGyD,KAAK,GAAGJ,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;MACpG,IAAI+B,WAAW,GAAG7F,MAAM,CAAC4F,WAAW,EAAEhC,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;MACnE,IAAIY,kBAAkB,GAAGiB,UAAU,CAAChB,YAAY,CAACkB,WAAW,CAAC;MAC7D,IAAIjB,kBAAkB,GAAGF,kBAAkB,CAAC9G,MAAM,GAAG,CAAC;MAEtD,IAAIgH,kBAAkB,EAAE;QACtB,IAAIC,eAAe,GAAGH,kBAAkB,CAAC9D,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1D2E,eAAe,GAAG;UAChBlF,CAAC,EAAEwE,eAAe,CAACxE,CAAC;UACpBE,CAAC,EAAEsE,eAAe,CAACtE;QACrB,CAAC;QACDiF,gBAAgB,GAAG;UACjBnF,CAAC,EAAEwE,eAAe,CAACxE,CAAC;UACpBE,CAAC,EAAEsE,eAAe,CAACtE;QACrB,CAAC;MACH,CAAC,MAAM;QACL,IAAIuF,+BAA+B,GAAGlC,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,OAAO,CAAC,CAAC,GAAGF,EAAE,CAAC,EAAE,CAAC1F,MAAM,CAAC4F,IAAI,EAAE,MAAM,CAAC,CAAC;QAEhG,IAAIgC,+BAA+B,EAAE;UACnC,IAAIC,IAAI,GAAGF,WAAW,CAACG,MAAM,CAAC1F,EAAE,CAAC,CAAC+E,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;UAChDC,SAAS,GAAG;YACVjF,CAAC,EAAEC,EAAE;YACLC,CAAC,EAAEwF;UACL,CAAC;UACDR,eAAe,GAAG;YAChBlF,CAAC,EAAEC,EAAE;YACLC,CAAC,EAAEwF;UACL,CAAC;UACDP,gBAAgB,GAAG;YACjBnF,CAAC,EAAEC,EAAE;YACLC,CAAC,EAAEwF;UACL,CAAC;QACH,CAAC,MAAM;UACL,IAAIE,KAAK,GAAGN,UAAU,CAACK,MAAM,CAACnF,EAAE,CAAC,CAACwE,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;UAChDI,UAAU,GAAG;YACXpF,CAAC,EAAEQ,EAAE;YACLN,CAAC,EAAE0F;UACL,CAAC;UACDT,gBAAgB,GAAG;YACjBnF,CAAC,EAAEQ,EAAE;YACLN,CAAC,EAAE0F;UACL,CAAC;UACDV,eAAe,GAAG;YAChBlF,CAAC,EAAEQ,EAAE;YACLN,CAAC,EAAE0F;UACL,CAAC;QACH;MACF;IACF;IAEA,OAAO,CAACX,SAAS,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,UAAU,CAAC;EACnE,CAAC;EAED,IAAIS,SAAS,GAAGrC,aAAa,CAAC,KAAK,CAAC;EACpC,IAAIsC,YAAY,GAAGtC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAE5C,OAAO,CAACsC,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,CAAC,CAAC,CAAC,CAAC,CAACjI,MAAM,CAACa,kBAAkB,CAACmH,SAAS,CAAC,EAAE,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AACrH,CAAC;AAED,OAAO,IAAIC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAajG,KAAK,EAAEC,KAAK,EAAEuC,YAAY,EAAE;EACpE,IAAIgB,QAAQ,GAAGzD,WAAW,CAACC,KAAK,EAAEC,KAAK,CAAC;EACxC,IAAIQ,IAAI,GAAG+C,QAAQ,CAACnD,EAAE,GAAGmD,QAAQ,CAAC7C,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC7C,IAAI8B,SAAS,GAAGhC,IAAI,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO;EAC5C,IAAIsE,MAAM,GAAGxB,oBAAoB,CAACC,QAAQ,EAAE/C,IAAI,EAAE+B,YAAY,CAAC;EAC/D,OAAOF,eAAe,CAACyC,MAAM,EAAEvC,YAAY,EAAEC,SAAS,CAAC;AACzD,CAAC;AACD,OAAO,IAAIyD,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAalG,KAAK,EAAEC,KAAK,EAAEuC,YAAY,EAAE;EACtE,IAAIgB,QAAQ,GAAGzD,WAAW,CAACC,KAAK,EAAEC,KAAK,CAAC;EACxC,IAAIQ,IAAI,GAAG+C,QAAQ,CAACrD,EAAE,GAAGqD,QAAQ,CAAC9C,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC7C,IAAI+B,SAAS,GAAG,OAAO;EACvB,IAAIgB,EAAE,GAAG;IACPZ,QAAQ,EAAEpC,IAAI,GAAG,CAAC,GAAG+B,YAAY,CAACG,OAAO,GAAGH,YAAY,CAACO,UAAU;IACnEE,WAAW,EAAExC,IAAI,GAAG,CAAC,GAAG+B,YAAY,CAACK,QAAQ,GAAGL,YAAY,CAACS,WAAW;IACxEF,UAAU,EAAEtC,IAAI,GAAG,CAAC,GAAG+B,YAAY,CAACS,WAAW,GAAGT,YAAY,CAACK,QAAQ;IACvEF,OAAO,EAAElC,IAAI,GAAG,CAAC,GAAG+B,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACG;EAC7D,CAAC;EACD,IAAIoC,MAAM,GAAGE,sBAAsB,CAACzB,QAAQ,EAAE/C,IAAI,EAAEgD,EAAE,CAAC;EACvD,OAAOnB,eAAe,CAACyC,MAAM,EAAEtB,EAAE,EAAEhB,SAAS,CAAC;AAC/C,CAAC;AACD,OAAO,IAAI0D,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAanG,KAAK,EAAEwC,YAAY,EAAE;EAClE,IAAI4D,KAAK,GAAGpG,KAAK,CAACoG,KAAK;IACnBrF,KAAK,GAAGf,KAAK,CAACe,KAAK;IACnBF,KAAK,GAAGb,KAAK,CAACa,KAAK;IACnBN,SAAS,GAAGP,KAAK,CAACO,SAAS;IAC3B8F,KAAK,GAAGrG,KAAK,CAACqG,KAAK;EACvB,IAAIC,EAAE,GAAGvF,KAAK,CAACX,CAAC,CAACgG,KAAK,CAACG,GAAG,IAAI,CAAC,CAAC;EAChC,IAAIC,EAAE,GAAGzF,KAAK,CAACX,CAAC,CAACgG,KAAK,CAACK,GAAG,KAAKxF,SAAS,GAAGmF,KAAK,CAACK,GAAG,GAAGL,KAAK,CAACM,EAAE,CAAC;EAChE,IAAIzE,YAAY,GAAGlB,KAAK,CAACb,CAAC,CAACkG,KAAK,CAACpF,GAAG,KAAKC,SAAS,GAAGmF,KAAK,CAACpF,GAAG,GAAGoF,KAAK,CAACO,EAAE,CAAC;EAC1E,IAAIC,KAAK;EACT,IAAIC,GAAG;EAEP,IAAIR,KAAK,CAACpG,KAAK,EAAE;IACf,IAAIA,KAAK,GAAGiB,eAAe,CAAClB,KAAK,EAAEqG,KAAK,CAACpG,KAAK,CAAC;IAC/C,IAAIO,IAAI,GAAGD,SAAS,KAAK,QAAQ,GAAGN,KAAK,GAAG,CAAC,GAAGA,KAAK;IACrD2G,KAAK,GAAGrG,SAAS,KAAK,OAAO,GAAG0B,YAAY,GAAGA,YAAY,GAAGzB,IAAI;IAClEqG,GAAG,GAAGtG,SAAS,KAAK,KAAK,GAAG0B,YAAY,GAAGA,YAAY,GAAGzB,IAAI;EAChE,CAAC,MAAM;IACLoG,KAAK,GAAG5E,aAAa,CAAChC,KAAK,EAAEa,KAAK,CAAC;IACnCgG,GAAG,GAAG1E,WAAW,CAACnC,KAAK,EAAEa,KAAK,CAAC;EACjC;EAEA,IAAIiB,OAAO,GAAG,SAAVA,OAAOA,CAAagF,IAAI,EAAE;IAC5B,IAAIC,YAAY,GAAGnH,OAAO,CAACoH,GAAG,CAAC,CAAC,CAACC,WAAW,CAACX,EAAE,CAAC,CAACY,WAAW,CAACV,EAAE,CAAC,CAACW,UAAU,CAACxF,cAAc,CAACiF,KAAK,CAAC,CAAC,CAACQ,QAAQ,CAACzF,cAAc,CAACkF,GAAG,CAAC,CAAC,CAACrE,YAAY,CAACA,YAAY,CAACsE,IAAI,CAAC,CAAC;IACjK,OAAOC,YAAY,CAAC,CAAC;EACvB,CAAC;EAED,IAAIM,WAAW,GAAG,SAAdA,WAAWA,CAAaP,IAAI,EAAE;IAChC,IAAIQ,SAAS,GAAGxF,OAAO,CAAC,EAAE,CAAC/D,MAAM,CAAC+I,IAAI,EAAE,OAAO,CAAC,CAAC;IACjD,IAAIS,UAAU,GAAGD,SAAS,CAACE,KAAK,CAAC,QAAQ,CAAC;IAC1C,IAAIC,WAAW,GAAGH,SAAS,CAACI,KAAK,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;IACnD,IAAIC,WAAW,GAAGL,UAAU,CAACM,OAAO,CAAC,GAAG,CAAC;IACzC,IAAIC,QAAQ,GAAGhG,OAAO,CAAC,EAAE,CAAC/D,MAAM,CAAC+I,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/C,IAAIiB,SAAS,GAAGD,QAAQ,CAACN,KAAK,CAAC,QAAQ,CAAC;IACxC,IAAIQ,UAAU,GAAGF,QAAQ,CAACJ,KAAK,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;IACjD,IAAIM,UAAU,GAAGF,SAAS,CAACF,OAAO,CAAC,GAAG,CAAC;IACvC,OAAO;MACLN,UAAU,EAAEA,UAAU;MACtBE,WAAW,EAAEA,WAAW;MACxBG,WAAW,EAAEA,WAAW;MACxBG,SAAS,EAAEA,SAAS;MACpBC,UAAU,EAAEA,UAAU;MACtBC,UAAU,EAAEA;IACd,CAAC;EACH,CAAC,CAAC,CAAC;;EAGH,IAAIC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAe;IAC3B,IAAIrF,QAAQ,GAAGL,YAAY,CAACK,QAAQ;MAChCF,OAAO,GAAGH,YAAY,CAACG,OAAO;IAClC,IAAIwF,SAAS,GAAG3B,EAAE,GAAGnF,IAAI,CAACI,GAAG,CAACoF,GAAG,GAAGD,KAAK,CAAC;IAE1C,IAAIwB,YAAY,GAAGf,WAAW,CAAC,KAAK,CAAC;MACjCE,UAAU,GAAGa,YAAY,CAACb,UAAU;MACpCE,WAAW,GAAGW,YAAY,CAACX,WAAW;MACtCG,WAAW,GAAGQ,YAAY,CAACR,WAAW;MACtCG,SAAS,GAAGK,YAAY,CAACL,SAAS;MAClCC,UAAU,GAAGI,YAAY,CAACJ,UAAU;MACpCC,UAAU,GAAGG,YAAY,CAACH,UAAU;IAExC,IAAII,KAAK;IACT,IAAI9F,MAAM;IAEV,IAAIM,QAAQ,KAAKF,OAAO,IAAIwF,SAAS,GAAG,CAAC,GAAGtF,QAAQ,GAAG,CAAC,GAAGF,OAAO,EAAE;MAClE0F,KAAK,GAAGxF,QAAQ,GAAGF,OAAO,GAAG4E,UAAU,GAAGQ,SAAS;MACnDxF,MAAM,GAAGM,QAAQ,GAAGF,OAAO,GAAG8E,WAAW,GAAGO,UAAU;IACxD,CAAC,MAAM;MACL;MACA,IAAIM,OAAO,GAAG,SAAVA,OAAOA,CAAaC,MAAM,EAAE;QAC9B,OAAOA,MAAM,GAAG,CAAC;MACnB,CAAC;MAED,IAAIC,WAAW,GAAG7F,OAAO,GAAGE,QAAQ,IAAIyF,OAAO,CAACV,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;MACpE,IAAIa,UAAU;MAEd,IAAI5F,QAAQ,GAAGF,OAAO,EAAE;QACtB,IAAI+F,aAAa,GAAGJ,OAAO,CAACV,WAAW,CAAC,GAAGK,UAAU,GAAGA,UAAU,GAAG,CAAC;QACtEQ,UAAU,GAAGH,OAAO,CAACL,UAAU,CAAC,GAAGA,UAAU,GAAG,CAAC,GAAGS,aAAa;MACnE,CAAC,MAAM;QACL,IAAIC,cAAc,GAAGL,OAAO,CAACL,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC;QAEhDQ,UAAU,GAAGH,OAAO,CAACV,WAAW,CAAC,GAAGe,cAAc,GAAGV,UAAU,GAAG,CAAC;MACrE;MAEAI,KAAK,GAAGzJ,kBAAkB,CAAC2I,UAAU,CAACI,KAAK,CAAC,CAAC,EAAEa,WAAW,CAAC,CAAC,CAACzK,MAAM,CAACa,kBAAkB,CAACmJ,SAAS,CAACJ,KAAK,CAACc,UAAU,CAAC,CAAC,CAAC;MACpHlG,MAAM,GAAG3D,kBAAkB,CAAC6I,WAAW,CAACE,KAAK,CAAC,CAAC,EAAEa,WAAW,CAAC,CAAC,CAACzK,MAAM,CAACa,kBAAkB,CAACoJ,UAAU,CAACL,KAAK,CAACc,UAAU,CAAC,CAAC,CAAC;IACzH;IAEA,IAAIF,MAAM,GAAGF,KAAK,CAACR,OAAO,CAAC,GAAG,CAAC;IAC/B,IAAIe,QAAQ,GAAGP,KAAK,CAACV,KAAK,CAAC,CAAC,EAAEY,MAAM,CAAC;IACrC,IAAIM,SAAS,GAAGtG,MAAM,CAACoF,KAAK,CAAC,CAAC,EAAEY,MAAM,CAAC;IACvC,OAAOK,QAAQ,CAACE,GAAG,CAAC,UAAUC,CAAC,EAAExL,CAAC,EAAE;MAClC,OAAO;QACL+F,OAAO,EAAEyF,CAAC;QACVxG,MAAM,EAAEsG,SAAS,CAACtL,CAAC,CAAC,CAACmK,KAAK,CAAC,GAAG;MAChC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;;EAGH,IAAIsB,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAe;IAC9B,IAAI/F,WAAW,GAAGT,YAAY,CAACS,WAAW;MACtCF,UAAU,GAAGP,YAAY,CAACO,UAAU;IACxC,IAAIoF,SAAS,GAAG7B,EAAE,GAAGjF,IAAI,CAACI,GAAG,CAACoF,GAAG,GAAGD,KAAK,CAAC;IAE1C,IAAIqC,aAAa,GAAG5B,WAAW,CAAC,QAAQ,CAAC;MACrCE,UAAU,GAAG0B,aAAa,CAAC1B,UAAU;MACrCE,WAAW,GAAGwB,aAAa,CAACxB,WAAW;MACvCG,WAAW,GAAGqB,aAAa,CAACrB,WAAW;MACvCG,SAAS,GAAGkB,aAAa,CAAClB,SAAS;MACnCC,UAAU,GAAGiB,aAAa,CAACjB,UAAU;MACrCC,UAAU,GAAGgB,aAAa,CAAChB,UAAU;IAEzC,IAAII,KAAK;IACT,IAAI9F,MAAM;IAEV,IAAIU,WAAW,KAAKF,UAAU,IAAIoF,SAAS,GAAG,CAAC,GAAGlF,WAAW,GAAG,CAAC,GAAGF,UAAU,EAAE;MAC9EsF,KAAK,GAAGpF,WAAW,GAAGF,UAAU,GAAGwE,UAAU,GAAGQ,SAAS;MACzDxF,MAAM,GAAGU,WAAW,GAAGF,UAAU,GAAG0E,WAAW,GAAGO,UAAU;IAC9D,CAAC,MAAM;MACL;MACA,IAAIM,OAAO,GAAG,SAAVA,OAAOA,CAAaS,CAAC,EAAER,MAAM,EAAE;QACjC,OAAOQ,CAAC,CAACtL,MAAM,GAAG8K,MAAM,GAAG,CAAC;MAC9B,CAAC;MAED,IAAIW,SAAS,GAAGjG,WAAW,GAAGF,UAAU,GAAGuF,OAAO,CAACf,UAAU,EAAEK,WAAW,CAAC,GAAGU,OAAO,CAACP,SAAS,EAAEE,UAAU,CAAC,CAAC,CAAC;;MAE9G,IAAIO,WAAW,GAAGU,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MACrCb,KAAK,GAAGzJ,kBAAkB,CAACmJ,SAAS,CAACJ,KAAK,CAAC,CAAC,EAAEM,UAAU,GAAG,CAAC,CAAC,CAAC,CAAClK,MAAM,CAACa,kBAAkB,CAAC2I,UAAU,CAACI,KAAK,CAACa,WAAW,CAAC,CAAC,CAAC;MACxHjG,MAAM,GAAG3D,kBAAkB,CAACoJ,UAAU,CAACL,KAAK,CAAC,CAAC,EAAEM,UAAU,GAAG,CAAC,CAAC,CAAC,CAAClK,MAAM,CAACa,kBAAkB,CAAC6I,WAAW,CAACE,KAAK,CAACa,WAAW,CAAC,CAAC,CAAC;IAC7H;IAEA,IAAID,MAAM,GAAGF,KAAK,CAACR,OAAO,CAAC,GAAG,CAAC;IAC/B,IAAIe,QAAQ,GAAGP,KAAK,CAACV,KAAK,CAACY,MAAM,EAAE,CAAC,CAAC,CAAC;IACtC,IAAIM,SAAS,GAAGtG,MAAM,CAACoF,KAAK,CAACY,MAAM,EAAE,CAAC,CAAC,CAAC;IACxC,OAAOK,QAAQ,CAACE,GAAG,CAAC,UAAUC,CAAC,EAAExL,CAAC,EAAE;MAClC,OAAO;QACL+F,OAAO,EAAEyF,CAAC;QACVxG,MAAM,EAAEsG,SAAS,CAACtL,CAAC,CAAC,CAACmK,KAAK,CAAC,GAAG;MAChC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,IAAIyB,OAAO,GAAGjB,UAAU,CAAC,CAAC;EAC1B,IAAIkB,UAAU,GAAGJ,aAAa,CAAC,CAAC;EAEhC,IAAIX,KAAK,GAAGzJ,kBAAkB,CAACuK,OAAO,CAAC,CAACpL,MAAM,CAACa,kBAAkB,CAACwK,UAAU,CAAC,CAAC;EAE9E,IAAIjG,IAAI,GAAGkF,KAAK,CAACjF,MAAM,CAAC,UAAUiG,IAAI,EAAEC,IAAI,EAAE;IAC5CD,IAAI,IAAI,EAAE,CAACtL,MAAM,CAACuL,IAAI,CAAChG,OAAO,EAAE,GAAG,CAAC,CAACvF,MAAM,CAACuL,IAAI,CAAC/G,MAAM,CAACgH,IAAI,CAAC,CAAC,CAAC;IAC/D,OAAOF,IAAI;EACb,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,EAAE,CAACtL,MAAM,CAACoF,IAAI,EAAE,IAAI,CAAC;AAC9B,CAAC"},"metadata":{},"sourceType":"module"}