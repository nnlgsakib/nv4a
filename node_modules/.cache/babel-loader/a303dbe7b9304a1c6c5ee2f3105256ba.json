{"ast":null,"code":"import { useContext } from 'react';\nimport { getI18n, getHasUsedI18nextProvider, I18nContext } from './context';\nexport function useSSR(initialI18nStore, initialLanguage) {\n  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var i18nFromProps = props.i18n;\n  var ReactI18nContext = useContext(I18nContext);\n  var _ref = getHasUsedI18nextProvider() ? ReactI18nContext || {} : {},\n    i18nFromContext = _ref.i18n;\n  var i18n = i18nFromProps || i18nFromContext || getI18n(); // opt out if is a cloned instance, eg. created by i18next-express-middleware on request\n  // -> do not set initial stuff on server side\n\n  if (i18n.options && i18n.options.isClone) return; // nextjs / SSR: getting data from next.js or other ssr stack\n\n  if (initialI18nStore && !i18n.initializedStoreOnce) {\n    i18n.services.resourceStore.data = initialI18nStore;\n    i18n.initializedStoreOnce = true;\n  }\n  if (initialLanguage && !i18n.initializedLanguageOnce) {\n    i18n.changeLanguage(initialLanguage);\n    i18n.initializedLanguageOnce = true;\n  }\n}","map":{"version":3,"names":["useContext","getI18n","getHasUsedI18nextProvider","I18nContext","useSSR","initialI18nStore","initialLanguage","props","arguments","length","undefined","i18nFromProps","i18n","ReactI18nContext","_ref","i18nFromContext","options","isClone","initializedStoreOnce","services","resourceStore","data","initializedLanguageOnce","changeLanguage"],"sources":["/root/experiment/nova-explorer/node_modules/react-i18next/dist/es/useSSR.js"],"sourcesContent":["import { useContext } from 'react';\nimport { getI18n, getHasUsedI18nextProvider, I18nContext } from './context';\nexport function useSSR(initialI18nStore, initialLanguage) {\n  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var i18nFromProps = props.i18n;\n  var ReactI18nContext = useContext(I18nContext);\n\n  var _ref = getHasUsedI18nextProvider() ? ReactI18nContext || {} : {},\n      i18nFromContext = _ref.i18n;\n\n  var i18n = i18nFromProps || i18nFromContext || getI18n(); // opt out if is a cloned instance, eg. created by i18next-express-middleware on request\n  // -> do not set initial stuff on server side\n\n  if (i18n.options && i18n.options.isClone) return; // nextjs / SSR: getting data from next.js or other ssr stack\n\n  if (initialI18nStore && !i18n.initializedStoreOnce) {\n    i18n.services.resourceStore.data = initialI18nStore;\n    i18n.initializedStoreOnce = true;\n  }\n\n  if (initialLanguage && !i18n.initializedLanguageOnce) {\n    i18n.changeLanguage(initialLanguage);\n    i18n.initializedLanguageOnce = true;\n  }\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,OAAO,EAAEC,yBAAyB,EAAEC,WAAW,QAAQ,WAAW;AAC3E,OAAO,SAASC,MAAMA,CAACC,gBAAgB,EAAEC,eAAe,EAAE;EACxD,IAAIC,KAAK,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAClF,IAAIG,aAAa,GAAGJ,KAAK,CAACK,IAAI;EAC9B,IAAIC,gBAAgB,GAAGb,UAAU,CAACG,WAAW,CAAC;EAE9C,IAAIW,IAAI,GAAGZ,yBAAyB,CAAC,CAAC,GAAGW,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAChEE,eAAe,GAAGD,IAAI,CAACF,IAAI;EAE/B,IAAIA,IAAI,GAAGD,aAAa,IAAII,eAAe,IAAId,OAAO,CAAC,CAAC,CAAC,CAAC;EAC1D;;EAEA,IAAIW,IAAI,CAACI,OAAO,IAAIJ,IAAI,CAACI,OAAO,CAACC,OAAO,EAAE,OAAO,CAAC;;EAElD,IAAIZ,gBAAgB,IAAI,CAACO,IAAI,CAACM,oBAAoB,EAAE;IAClDN,IAAI,CAACO,QAAQ,CAACC,aAAa,CAACC,IAAI,GAAGhB,gBAAgB;IACnDO,IAAI,CAACM,oBAAoB,GAAG,IAAI;EAClC;EAEA,IAAIZ,eAAe,IAAI,CAACM,IAAI,CAACU,uBAAuB,EAAE;IACpDV,IAAI,CAACW,cAAc,CAACjB,eAAe,CAAC;IACpCM,IAAI,CAACU,uBAAuB,GAAG,IAAI;EACrC;AACF"},"metadata":{},"sourceType":"module"}