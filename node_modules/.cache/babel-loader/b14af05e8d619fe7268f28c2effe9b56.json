{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport useQueryParams from './useQueryParams';\n/**\n * HOC to provide query parameters via props `query` and `setQuery`\n * NOTE: I couldn't get type to automatically infer generic when\n * using the format withQueryParams(config)(component), so I switched\n * to withQueryParams(config, component).\n * See: https://github.com/microsoft/TypeScript/issues/30134\n */\nexport function withQueryParams(paramConfigMap, WrappedComponent) {\n  // return a FC that takes props excluding query and setQuery\n  var Component = function Component(props) {\n    var _a = useQueryParams(paramConfigMap),\n      query = _a[0],\n      setQuery = _a[1];\n    // see https://github.com/microsoft/TypeScript/issues/28938#issuecomment-450636046 for why `...props as P`\n    return React.createElement(WrappedComponent, __assign({\n      query: query,\n      setQuery: setQuery\n    }, props));\n  };\n  Component.displayName = \"withQueryParams(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\";\n  return Component;\n}\nexport default withQueryParams;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useQueryParams","withQueryParams","paramConfigMap","WrappedComponent","Component","props","_a","query","setQuery","createElement","displayName","name"],"sources":["/root/experiment/nova-explorer/node_modules/use-query-params/esm/withQueryParams.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport useQueryParams from './useQueryParams';\n/**\n * HOC to provide query parameters via props `query` and `setQuery`\n * NOTE: I couldn't get type to automatically infer generic when\n * using the format withQueryParams(config)(component), so I switched\n * to withQueryParams(config, component).\n * See: https://github.com/microsoft/TypeScript/issues/30134\n */\nexport function withQueryParams(paramConfigMap, WrappedComponent) {\n    // return a FC that takes props excluding query and setQuery\n    var Component = function (props) {\n        var _a = useQueryParams(paramConfigMap), query = _a[0], setQuery = _a[1];\n        // see https://github.com/microsoft/TypeScript/issues/28938#issuecomment-450636046 for why `...props as P`\n        return (React.createElement(WrappedComponent, __assign({ query: query, setQuery: setQuery }, props)));\n    };\n    Component.displayName = \"withQueryParams(\" + (WrappedComponent.displayName ||\n        WrappedComponent.name ||\n        'Component') + \")\";\n    return Component;\n}\nexport default withQueryParams;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC;QAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;MAAC;IACpB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,OAAO,KAAKO,KAAK,MAAM,OAAO;AAC9B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,cAAc,EAAEC,gBAAgB,EAAE;EAC9D;EACA,IAAIC,SAAS,GAAG,SAAZA,SAASA,CAAaC,KAAK,EAAE;IAC7B,IAAIC,EAAE,GAAGN,cAAc,CAACE,cAAc,CAAC;MAAEK,KAAK,GAAGD,EAAE,CAAC,CAAC,CAAC;MAAEE,QAAQ,GAAGF,EAAE,CAAC,CAAC,CAAC;IACxE;IACA,OAAQP,KAAK,CAACU,aAAa,CAACN,gBAAgB,EAAElB,QAAQ,CAAC;MAAEsB,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAS,CAAC,EAAEH,KAAK,CAAC,CAAC;EACxG,CAAC;EACDD,SAAS,CAACM,WAAW,GAAG,kBAAkB,IAAIP,gBAAgB,CAACO,WAAW,IACtEP,gBAAgB,CAACQ,IAAI,IACrB,WAAW,CAAC,GAAG,GAAG;EACtB,OAAOP,SAAS;AACpB;AACA,eAAeH,eAAe"},"metadata":{},"sourceType":"module"}