{"ast":null,"code":"import _createForOfIteratorHelper from\"/root/experiment/nova-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import*as React from\"react\";import{hexToNumber}from\"@etclabscore/eserialize\";import{useTranslation}from\"react-i18next\";import{TableCell,TableRow}from\"@material-ui/core\";var BigIntMinBy=function BigIntMinBy(list,func){var min;var _iterator=_createForOfIteratorHelper(list),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _item=_step.value;if(min===undefined){min=_item;continue;}var r=func(_item);if(r<func(min)){min=_item;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return min;};var BigIntMaxBy=function BigIntMaxBy(list,func){var max;var _iterator2=_createForOfIteratorHelper(list),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _item2=_step2.value;if(max===undefined){max=_item2;continue;}var r=func(_item2);if(r>func(max)){max=_item2;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return max;};function BlockGasPrice(props){var _BigIntMinBy,_BigIntMaxBy;var _useTranslation=useTranslation(),t=_useTranslation.t;var transactions=props.block.transactions;if(transactions.length===0){return null;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,t(\"Min Gas Price\")),/*#__PURE__*/React.createElement(TableCell,null,hexToNumber(((_BigIntMinBy=BigIntMinBy(transactions,function(tx){return BigInt(tx.gasPrice);}))===null||_BigIntMinBy===void 0?void 0:_BigIntMinBy.gasPrice)||\"\"))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,t(\"Max Gas Price\")),/*#__PURE__*/React.createElement(TableCell,null,hexToNumber((_BigIntMaxBy=BigIntMaxBy(transactions,function(tx){return BigInt(tx.gasPrice);}))===null||_BigIntMaxBy===void 0?void 0:_BigIntMaxBy.gasPrice)||\"\")));}export default BlockGasPrice;","map":{"version":3,"names":["React","hexToNumber","useTranslation","TableCell","TableRow","BigIntMinBy","list","func","min","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","value","undefined","r","err","e","f","BigIntMaxBy","max","_iterator2","_step2","BlockGasPrice","props","_BigIntMinBy","_BigIntMaxBy","_useTranslation","t","transactions","block","length","createElement","Fragment","tx","BigInt","gasPrice"],"sources":["/root/experiment/nova-explorer/src/components/BlockView/BlockGasPrice.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { hexToNumber } from \"@etclabscore/eserialize\";\nimport { useTranslation } from \"react-i18next\";\nimport { TableCell, TableRow } from \"@material-ui/core\";\n\nconst BigIntMinBy = (list: [], func: (item: any) => BigInt): any => {\n  let min: any;\n  for (const item of list) {\n    if (min === undefined) {\n      min = item;\n      continue;\n    }\n    const r = func(item);\n    if (r < func(min)) {\n      min = item;\n    }\n  }\n  return min;\n};\n\nconst BigIntMaxBy = (list: [], func: (item: any) => BigInt): any => {\n  let max: any;\n  for (const item of list) {\n    if (max === undefined) {\n      max = item;\n      continue;\n    }\n    const r = func(item);\n    if (r > func(max)) {\n      max = item;\n    }\n  }\n  return max;\n};\n\nfunction BlockGasPrice(props: any) {\n  const { t } = useTranslation();\n  const { transactions } = props.block;\n\n  if (transactions.length === 0) { return null; }\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>{t(\"Min Gas Price\")}</TableCell>\n        <TableCell>\n          {hexToNumber(BigIntMinBy(transactions, (tx: any) => BigInt(tx.gasPrice))?.gasPrice || \"\")}\n        </TableCell>\n      </TableRow>\n\n      <TableRow>\n        <TableCell>{t(\"Max Gas Price\")}</TableCell>\n        <TableCell>\n          {hexToNumber(BigIntMaxBy(transactions, (tx: any) => BigInt(tx.gasPrice))?.gasPrice) || \"\"}\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nexport default BlockGasPrice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}