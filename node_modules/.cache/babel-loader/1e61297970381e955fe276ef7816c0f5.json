{"ast":null,"code":"export default {\n  IMMUTABLE_ITERABLE: \"@@__IMMUTABLE_ITERABLE__@@\",\n  IMMUTABLE_RECORD: \"@@__IMMUTABLE_RECORD__@@\",\n  IMMUTABLE_LIST: \"@@__IMMUTABLE_LIST__@@\",\n  IMMUTABLE_MAP: \"@@__IMMUTABLE_MAP__@@\",\n  isImmutable: function isImmutable(x) {\n    return this.isIterable(x) || this.isRecord(x);\n  },\n  isIterable: function isIterable(x) {\n    return !!(x && x[this.IMMUTABLE_ITERABLE]);\n  },\n  isRecord: function isRecord(x) {\n    return !!(x && x[this.IMMUTABLE_RECORD]);\n  },\n  isList: function isList(x) {\n    return !!(x && x[this.IMMUTABLE_LIST]);\n  },\n  isMap: function isMap(x) {\n    return !!(x && x[this.IMMUTABLE_MAP]);\n  },\n  shallowToJS: function shallowToJS(x, whitelist) {\n    var _this = this;\n    return this.isIterable(x) ? x.reduce(function (prev, curr, key) {\n      if (whitelist && whitelist[key]) {\n        curr = _this.shallowToJS(curr);\n      }\n      prev[key] = curr;\n      return prev;\n    }, this.isList(x) ? [] : {}) : x;\n  }\n};","map":{"version":3,"names":["IMMUTABLE_ITERABLE","IMMUTABLE_RECORD","IMMUTABLE_LIST","IMMUTABLE_MAP","isImmutable","x","isIterable","isRecord","isList","isMap","shallowToJS","whitelist","_this","reduce","prev","curr","key"],"sources":["/root/experiment/nova-explorer/node_modules/victory-core/es/victory-util/immutable.js"],"sourcesContent":["export default {\n  IMMUTABLE_ITERABLE: \"@@__IMMUTABLE_ITERABLE__@@\",\n  IMMUTABLE_RECORD: \"@@__IMMUTABLE_RECORD__@@\",\n  IMMUTABLE_LIST: \"@@__IMMUTABLE_LIST__@@\",\n  IMMUTABLE_MAP: \"@@__IMMUTABLE_MAP__@@\",\n  isImmutable: function (x) {\n    return this.isIterable(x) || this.isRecord(x);\n  },\n  isIterable: function (x) {\n    return !!(x && x[this.IMMUTABLE_ITERABLE]);\n  },\n  isRecord: function (x) {\n    return !!(x && x[this.IMMUTABLE_RECORD]);\n  },\n  isList: function (x) {\n    return !!(x && x[this.IMMUTABLE_LIST]);\n  },\n  isMap: function (x) {\n    return !!(x && x[this.IMMUTABLE_MAP]);\n  },\n  shallowToJS: function (x, whitelist) {\n    var _this = this;\n\n    return this.isIterable(x) ? x.reduce(function (prev, curr, key) {\n      if (whitelist && whitelist[key]) {\n        curr = _this.shallowToJS(curr);\n      }\n\n      prev[key] = curr;\n      return prev;\n    }, this.isList(x) ? [] : {}) : x;\n  }\n};"],"mappings":"AAAA,eAAe;EACbA,kBAAkB,EAAE,4BAA4B;EAChDC,gBAAgB,EAAE,0BAA0B;EAC5CC,cAAc,EAAE,wBAAwB;EACxCC,aAAa,EAAE,uBAAuB;EACtCC,WAAW,EAAE,SAAAA,YAAUC,CAAC,EAAE;IACxB,OAAO,IAAI,CAACC,UAAU,CAACD,CAAC,CAAC,IAAI,IAAI,CAACE,QAAQ,CAACF,CAAC,CAAC;EAC/C,CAAC;EACDC,UAAU,EAAE,SAAAA,WAAUD,CAAC,EAAE;IACvB,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAAC,IAAI,CAACL,kBAAkB,CAAC,CAAC;EAC5C,CAAC;EACDO,QAAQ,EAAE,SAAAA,SAAUF,CAAC,EAAE;IACrB,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAAC,IAAI,CAACJ,gBAAgB,CAAC,CAAC;EAC1C,CAAC;EACDO,MAAM,EAAE,SAAAA,OAAUH,CAAC,EAAE;IACnB,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAAC,IAAI,CAACH,cAAc,CAAC,CAAC;EACxC,CAAC;EACDO,KAAK,EAAE,SAAAA,MAAUJ,CAAC,EAAE;IAClB,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAAC,IAAI,CAACF,aAAa,CAAC,CAAC;EACvC,CAAC;EACDO,WAAW,EAAE,SAAAA,YAAUL,CAAC,EAAEM,SAAS,EAAE;IACnC,IAAIC,KAAK,GAAG,IAAI;IAEhB,OAAO,IAAI,CAACN,UAAU,CAACD,CAAC,CAAC,GAAGA,CAAC,CAACQ,MAAM,CAAC,UAAUC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAE;MAC9D,IAAIL,SAAS,IAAIA,SAAS,CAACK,GAAG,CAAC,EAAE;QAC/BD,IAAI,GAAGH,KAAK,CAACF,WAAW,CAACK,IAAI,CAAC;MAChC;MAEAD,IAAI,CAACE,GAAG,CAAC,GAAGD,IAAI;MAChB,OAAOD,IAAI;IACb,CAAC,EAAE,IAAI,CAACN,MAAM,CAACH,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAGA,CAAC;EAClC;AACF,CAAC"},"metadata":{},"sourceType":"module"}