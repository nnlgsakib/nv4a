{"ast":null,"code":"import _slicedToArray from\"/root/experiment/nova-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{CircularProgress}from\"@material-ui/core\";import*as React from\"react\";import AddressView from\"../components/AddressView\";import _ from\"lodash\";import getBlocks,{useBlockNumber}from\"../helpers\";import useEthRPCStore from\"../stores/useEthRPCStore\";import{hexToNumber}from\"@etclabscore/eserialize\";import AddressTransactions from\"../components/AddressTransactions\";var unit=require(\"ethjs-unit\");//tslint:disable-line\nvar Address=function Address(_ref){var match=_ref.match,history=_ref.history;var _match$params=match.params,address=_match$params.address,block=_match$params.block;var _useEthRPCStore=useEthRPCStore(),_useEthRPCStore2=_slicedToArray(_useEthRPCStore,1),erpc=_useEthRPCStore2[0];var _useBlockNumber=useBlockNumber(erpc),_useBlockNumber2=_slicedToArray(_useBlockNumber,1),blockNumber=_useBlockNumber2[0];var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),transactionCount=_React$useState2[0],setTransactionCount=_React$useState2[1];var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),balance=_React$useState4[0],setBalance=_React$useState4[1];var _React$useState5=React.useState(),_React$useState6=_slicedToArray(_React$useState5,2),code=_React$useState6[0],setCode=_React$useState6[1];var blockNum=block===undefined?blockNumber:parseInt(block,10);var _React$useState7=React.useState([]),_React$useState8=_slicedToArray(_React$useState7,2),transactions=_React$useState8[0],setTransactions=_React$useState8[1];var from=Math.max(blockNum?blockNum:0-99,0);var to=blockNum;React.useEffect(function(){if(isNaN(blockNum)||isNaN(blockNumber)){return;}if(blockNum>blockNumber){history.push(\"/address/\".concat(address,\"/\").concat(blockNumber));}if(blockNum<0){history.push(\"/address/\".concat(address,\"/0\"));}},[blockNumber,blockNum,history,address]);React.useEffect(function(){if(blockNumber===undefined||!erpc){return;}var hexBlockNumber=\"0x\".concat(blockNumber.toString(16));erpc.eth_getTransactionCount(address,hexBlockNumber).then(function(txCount){if(txCount===null){return;}setTransactionCount(txCount);return txCount;}).then(function(txCountRes){if(txCountRes){erpc.eth_getBalance(address,hexBlockNumber).then(function(b){if(b===null){return;}setBalance(b);});erpc.eth_getCode(address,hexBlockNumber).then(function(c){if(c===null){return;}setCode(c);});}});},[blockNumber,address,erpc]);React.useEffect(function(){if(!erpc){return;}getBlocks(from,to,erpc).then(function(blcks){var txes=_.flatMap(blcks,\"transactions\");var filteredTxes=_.filter(txes,function(tx){if(!tx){return false;}return tx.to===address||tx.from===address;});var sortedTxes=_.sortBy(filteredTxes,function(tx){return hexToNumber(tx.blockNumber);}).reverse();setTransactions(sortedTxes);});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[from,to]);if(transactionCount===undefined||balance===undefined||code===undefined){return/*#__PURE__*/React.createElement(CircularProgress,null);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AddressView,{address:address,txCount:transactionCount?hexToNumber(transactionCount):0,balance:unit.fromWei(balance||0,\"ether\"),code:code}),/*#__PURE__*/React.createElement(AddressTransactions,{from:from,to:to,transactions:transactions,disablePrev:blockNum>=blockNumber,disableNext:blockNum===0,onPrev:function onPrev(){var newQuery=blockNum+100;history.push(\"/address/\".concat(address,\"/\").concat(newQuery));},onNext:function onNext(){var newQuery=Math.max(blockNum-100,0);history.push(\"/address/\".concat(address,\"/\").concat(newQuery));}}));};export default Address;","map":{"version":3,"names":["CircularProgress","React","AddressView","_","getBlocks","useBlockNumber","useEthRPCStore","hexToNumber","AddressTransactions","unit","require","Address","_ref","match","history","_match$params","params","address","block","_useEthRPCStore","_useEthRPCStore2","_slicedToArray","erpc","_useBlockNumber","_useBlockNumber2","blockNumber","_React$useState","useState","_React$useState2","transactionCount","setTransactionCount","_React$useState3","_React$useState4","balance","setBalance","_React$useState5","_React$useState6","code","setCode","blockNum","undefined","parseInt","_React$useState7","_React$useState8","transactions","setTransactions","from","Math","max","to","useEffect","isNaN","push","concat","hexBlockNumber","toString","eth_getTransactionCount","then","txCount","txCountRes","eth_getBalance","b","eth_getCode","c","blcks","txes","flatMap","filteredTxes","filter","tx","sortedTxes","sortBy","reverse","createElement","Fragment","fromWei","disablePrev","disableNext","onPrev","newQuery","onNext"],"sources":["/root/experiment/nova-explorer/src/containers/Address.tsx"],"sourcesContent":["import { CircularProgress } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport AddressView from \"../components/AddressView\";\nimport _ from \"lodash\";\nimport getBlocks, { useBlockNumber } from \"../helpers\";\nimport useEthRPCStore from \"../stores/useEthRPCStore\";\nimport { hexToNumber } from \"@etclabscore/eserialize\";\nimport AddressTransactions from \"../components/AddressTransactions\";\nimport { History } from \"history\";\nimport { Transaction } from \"@etclabscore/ethereum-json-rpc\";\n\nconst unit = require(\"ethjs-unit\"); //tslint:disable-line\n\ninterface IProps {\n  match: {\n    params: {\n      address: string,\n      block: string,\n    };\n  };\n  history: History;\n}\n\nconst Address: React.FC<IProps> = ({ match, history }) => {\n  const { address, block } = match.params;\n  const [erpc] = useEthRPCStore();\n  const [blockNumber] = useBlockNumber(erpc);\n  const [transactionCount, setTransactionCount] = React.useState<string>();\n  const [balance, setBalance] = React.useState<string>();\n  const [code, setCode] = React.useState<string>();\n  const blockNum = block === undefined ? blockNumber : parseInt(block, 10);\n  const [transactions, setTransactions] = React.useState<Transaction[]>([]);\n\n  const from = Math.max(blockNum ? blockNum : 0 - 99, 0);\n  const to = blockNum;\n\n  React.useEffect(() => {\n    if (isNaN(blockNum) || isNaN(blockNumber)) {\n      return;\n    }\n    if (blockNum > blockNumber) {\n      history.push(`/address/${address}/${blockNumber}`);\n    }\n    if (blockNum < 0) {\n      history.push(`/address/${address}/0`);\n    }\n  }, [blockNumber, blockNum, history, address]);\n\n  React.useEffect(() => {\n    if (blockNumber === undefined || !erpc) {\n      return;\n    }\n    const hexBlockNumber = `0x${blockNumber.toString(16)}`;\n    erpc.eth_getTransactionCount(address, hexBlockNumber).then((txCount) => {\n      if (txCount === null) { return; }\n      setTransactionCount(txCount);\n      return txCount;\n    }).then((txCountRes: string | undefined) => {\n      if (txCountRes) {\n        erpc.eth_getBalance(address, hexBlockNumber).then((b) => {\n          if (b === null) { return; }\n          setBalance(b);\n        });\n        erpc.eth_getCode(address, hexBlockNumber).then((c) => {\n          if (c === null) { return; }\n          setCode(c);\n        });\n      }\n    });\n  }, [blockNumber, address, erpc]);\n\n  React.useEffect(() => {\n    if (!erpc) { return; }\n    getBlocks(from, to, erpc).then((blcks) => {\n      const txes = _.flatMap(blcks, \"transactions\");\n      const filteredTxes = _.filter(txes, (tx: any) => {\n        if (!tx) {\n          return false;\n        }\n        return tx.to === address || tx.from === address;\n      });\n      const sortedTxes = _.sortBy(filteredTxes, (tx: any) => {\n        return hexToNumber(tx.blockNumber);\n      }).reverse();\n      setTransactions(sortedTxes);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [from, to]);\n\n  if (transactionCount === undefined || balance === undefined || code === undefined) {\n    return <CircularProgress />;\n  }\n  return (\n    <>\n      <AddressView\n        address={address}\n        txCount={transactionCount ? hexToNumber(transactionCount) : 0}\n        balance={unit.fromWei(balance || 0, \"ether\")}\n        code={code}\n      />\n      <AddressTransactions\n        from={from}\n        to={to}\n        transactions={transactions}\n        disablePrev={blockNum >= blockNumber}\n        disableNext={blockNum === 0}\n        onPrev={() => {\n          const newQuery = blockNum + 100;\n          history.push(`/address/${address}/${newQuery}`);\n        }}\n        onNext={() => {\n          const newQuery = Math.max(blockNum - 100, 0);\n          history.push(`/address/${address}/${newQuery}`);\n        }}\n      />\n    </>\n  );\n};\n\nexport default Address;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}