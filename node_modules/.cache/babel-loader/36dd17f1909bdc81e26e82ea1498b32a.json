{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport React, { useContext } from 'react';\nimport HTML from 'html-parse-stringify2';\nimport { getI18n, getHasUsedI18nextProvider, I18nContext, getDefaults } from './context';\nimport { warn, warnOnce } from './utils';\nfunction hasChildren(node) {\n  return node && (node.children || node.props && node.props.children);\n}\nfunction getChildren(node) {\n  if (!node) return [];\n  return node && node.children ? node.children : node.props && node.props.children;\n}\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n  return children.every(function (child) {\n    return React.isValidElement(child);\n  });\n}\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\nexport function nodesToString(startingString, children, index, i18nOptions) {\n  if (!children) return '';\n  var stringNode = startingString;\n  var childrenArray = getAsArray(children);\n  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  childrenArray.forEach(function (child, i) {\n    var elementKey = \"\".concat(i);\n    if (typeof child === 'string') {\n      stringNode = \"\".concat(stringNode).concat(child);\n    } else if (hasChildren(child)) {\n      var elementTag = keepArray.indexOf(child.type) > -1 && Object.keys(child.props).length === 1 && typeof hasChildren(child) === 'string' ? child.type : elementKey;\n      if (child.props && child.props.i18nIsDynamicList) {\n        // we got a dynamic list like \"<ul>{['a', 'b'].map(item => ( <li key={item}>{item}</li> ))}</ul>\"\"\n        // the result should be \"<0></0>\" and not \"<0><0>a</0><1>b</1></0>\"\n        stringNode = \"\".concat(stringNode, \"<\").concat(elementTag, \"></\").concat(elementTag, \">\");\n      } else {\n        // regular case mapping the inner children\n        stringNode = \"\".concat(stringNode, \"<\").concat(elementTag, \">\").concat(nodesToString('', getChildren(child), i + 1, i18nOptions), \"</\").concat(elementTag, \">\");\n      }\n    } else if (React.isValidElement(child)) {\n      if (keepArray.indexOf(child.type) > -1 && Object.keys(child.props).length === 0) {\n        stringNode = \"\".concat(stringNode, \"<\").concat(child.type, \"/>\");\n      } else {\n        stringNode = \"\".concat(stringNode, \"<\").concat(elementKey, \"></\").concat(elementKey, \">\");\n      }\n    } else if (_typeof(child) === 'object') {\n      var clone = _objectSpread({}, child);\n      var format = clone.format;\n      delete clone.format;\n      var keys = Object.keys(clone);\n      if (format && keys.length === 1) {\n        stringNode = \"\".concat(stringNode, \"{{\").concat(keys[0], \", \").concat(format, \"}}\");\n      } else if (keys.length === 1) {\n        stringNode = \"\".concat(stringNode, \"{{\").concat(keys[0], \"}}\");\n      } else {\n        // not a valid interpolation object (can only contain one value plus format)\n        warn(\"react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.\", child);\n      }\n    } else {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.\", child);\n    }\n  });\n  return stringNode;\n}\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts) {\n  if (targetString === '') return []; // check if contains tags we need to replace from html string to react nodes\n\n  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  var emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString); // no need to replace tags in the targetstring\n\n  if (!children && !emptyChildrenButNeedsHandling) return [targetString]; // v2 -> interpolates upfront no need for \"some <0>{{var}}</0>\"\" -> will be just \"some {{var}}\" in translation file\n\n  var data = {};\n  function getData(childs) {\n    var childrenArray = getAsArray(childs);\n    childrenArray.forEach(function (child) {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (_typeof(child) === 'object' && !React.isValidElement(child)) Object.assign(data, child);\n    });\n  }\n  getData(children);\n  var interpolatedString = i18n.services.interpolator.interpolate(targetString, _objectSpread({}, data, {}, combinedTOpts), i18n.language); // parse ast from string with additional wrapper tag\n  // -> avoids issues in parser removing prepending text nodes\n\n  var ast = HTML.parse(\"<0>\".concat(interpolatedString, \"</0>\"));\n  function mapAST(reactNode, astNode) {\n    var reactNodes = getAsArray(reactNode);\n    var astNodes = getAsArray(astNode);\n    return astNodes.reduce(function (mem, node, i) {\n      var translationContent = node.children && node.children[0] && node.children[0].content;\n      if (node.type === 'tag') {\n        var child = reactNodes[parseInt(node.name, 10)] || {};\n        var isElement = React.isValidElement(child);\n        if (typeof child === 'string') {\n          mem.push(child);\n        } else if (hasChildren(child)) {\n          var childs = getChildren(child);\n          var mappedChildren = mapAST(childs, node.children);\n          var inner = hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;\n          if (child.dummy) child.children = inner; // needed on preact!\n\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          }), inner));\n        } else if (emptyChildrenButNeedsHandling && _typeof(child) === 'object' && child.dummy && !isElement) {\n          // we have a empty Trans node (the dummy element) with a targetstring that contains html tags needing\n          // conversion to react nodes\n          // so we just need to map the inner stuff\n          var _inner = mapAST(reactNodes\n          /* wrong but we need something */, node.children);\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          }), _inner));\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(React.createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }));\n            } else {\n              var _inner2 = mapAST(reactNodes\n              /* wrong but we need something */, node.children);\n              mem.push(React.createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }, _inner2));\n            }\n          } else if (node.voidElement) {\n            mem.push(\"<\".concat(node.name, \" />\"));\n          } else {\n            var _inner3 = mapAST(reactNodes\n            /* wrong but we need something */, node.children);\n            mem.push(\"<\".concat(node.name, \">\").concat(_inner3, \"</\").concat(node.name, \">\"));\n          }\n        } else if (_typeof(child) === 'object' && !isElement) {\n          var content = node.children[0] ? translationContent : null; // v1\n          // as interpolation was done already we just have a regular content node\n          // in the translation AST while having an object in reactNodes\n          // -> push the content no need to interpolate again\n\n          if (content) mem.push(content);\n        } else if (node.children.length === 1 && translationContent) {\n          // If component does not have children, but translation - has\n          // with this in component could be components={[<span class='make-beautiful'/>]} and in translation - 'some text <0>some highlighted message</0>'\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          }), translationContent));\n        } else {\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          })));\n        }\n      } else if (node.type === 'text') {\n        mem.push(node.content);\n      }\n      return mem;\n    }, []);\n  } // call mapAST with having react nodes nested into additional node like\n  // we did for the string ast from translation\n  // return the children of that extra node to get expected result\n\n  var result = mapAST([{\n    dummy: true,\n    children: children\n  }], ast);\n  return getChildren(result[0]);\n}\nexport function Trans(_ref) {\n  var children = _ref.children,\n    count = _ref.count,\n    parent = _ref.parent,\n    i18nKey = _ref.i18nKey,\n    tOptions = _ref.tOptions,\n    values = _ref.values,\n    defaults = _ref.defaults,\n    components = _ref.components,\n    ns = _ref.ns,\n    i18nFromProps = _ref.i18n,\n    tFromProps = _ref.t,\n    additionalProps = _objectWithoutProperties(_ref, [\"children\", \"count\", \"parent\", \"i18nKey\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\"]);\n  var _ref2 = getHasUsedI18nextProvider() ? useContext(I18nContext) || {} : {},\n    i18nFromContext = _ref2.i18n,\n    defaultNSFromContext = _ref2.defaultNS;\n  var i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (!i18n) {\n    warnOnce('You will need pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n  var t = tFromProps || i18n.t.bind(i18n) || function (k) {\n    return k;\n  };\n  var reactI18nextOptions = _objectSpread({}, getDefaults(), {}, i18n.options && i18n.options.react);\n  var useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent; // prepare having a namespace\n\n  var namespaces = ns || t.ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  var defaultValue = defaults || nodesToString('', children, 0, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue;\n  var hashTransKey = reactI18nextOptions.hashTransKey;\n  var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n  var interpolationOverride = values ? {} : {\n    interpolation: {\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  var combinedTOpts = _objectSpread({}, tOptions, {\n    count: count\n  }, values, {}, interpolationOverride, {\n    defaultValue: defaultValue,\n    ns: namespaces\n  });\n  var translation = key ? t(key, combinedTOpts) : defaultValue;\n  if (!useAsParent) return renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts);\n  return React.createElement(useAsParent, additionalProps, renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts));\n}","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","_typeof","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","useContext","HTML","getI18n","getHasUsedI18nextProvider","I18nContext","getDefaults","warn","warnOnce","hasChildren","node","children","props","getChildren","hasValidReactChildren","prototype","toString","call","every","child","isValidElement","getAsArray","data","Array","isArray","nodesToString","startingString","index","i18nOptions","stringNode","childrenArray","keepArray","transKeepBasicHtmlNodesFor","elementKey","concat","elementTag","indexOf","type","i18nIsDynamicList","clone","format","renderNodes","targetString","i18n","combinedTOpts","emptyChildrenButNeedsHandling","RegExp","join","test","getData","childs","assign","interpolatedString","services","interpolator","interpolate","language","ast","parse","mapAST","reactNode","astNode","reactNodes","astNodes","reduce","mem","translationContent","content","parseInt","name","isElement","mappedChildren","inner","dummy","cloneElement","_inner","Number","isNaN","parseFloat","transSupportBasicHtmlNodes","voidElement","createElement","_inner2","_inner3","result","Trans","_ref","count","parent","i18nKey","tOptions","values","defaults","components","ns","i18nFromProps","tFromProps","t","additionalProps","_ref2","i18nFromContext","defaultNSFromContext","defaultNS","bind","k","reactI18nextOptions","options","react","useAsParent","undefined","defaultTransParent","namespaces","defaultValue","transEmptyNodeValue","hashTransKey","interpolationOverride","interpolation","prefix","suffix","translation"],"sources":["/root/experiment/nova-explorer/node_modules/react-i18next/dist/es/Trans.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport HTML from 'html-parse-stringify2';\nimport { getI18n, getHasUsedI18nextProvider, I18nContext, getDefaults } from './context';\nimport { warn, warnOnce } from './utils';\n\nfunction hasChildren(node) {\n  return node && (node.children || node.props && node.props.children);\n}\n\nfunction getChildren(node) {\n  if (!node) return [];\n  return node && node.children ? node.children : node.props && node.props.children;\n}\n\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n  return children.every(function (child) {\n    return React.isValidElement(child);\n  });\n}\n\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\n\nexport function nodesToString(startingString, children, index, i18nOptions) {\n  if (!children) return '';\n  var stringNode = startingString;\n  var childrenArray = getAsArray(children);\n  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  childrenArray.forEach(function (child, i) {\n    var elementKey = \"\".concat(i);\n\n    if (typeof child === 'string') {\n      stringNode = \"\".concat(stringNode).concat(child);\n    } else if (hasChildren(child)) {\n      var elementTag = keepArray.indexOf(child.type) > -1 && Object.keys(child.props).length === 1 && typeof hasChildren(child) === 'string' ? child.type : elementKey;\n\n      if (child.props && child.props.i18nIsDynamicList) {\n        // we got a dynamic list like \"<ul>{['a', 'b'].map(item => ( <li key={item}>{item}</li> ))}</ul>\"\"\n        // the result should be \"<0></0>\" and not \"<0><0>a</0><1>b</1></0>\"\n        stringNode = \"\".concat(stringNode, \"<\").concat(elementTag, \"></\").concat(elementTag, \">\");\n      } else {\n        // regular case mapping the inner children\n        stringNode = \"\".concat(stringNode, \"<\").concat(elementTag, \">\").concat(nodesToString('', getChildren(child), i + 1, i18nOptions), \"</\").concat(elementTag, \">\");\n      }\n    } else if (React.isValidElement(child)) {\n      if (keepArray.indexOf(child.type) > -1 && Object.keys(child.props).length === 0) {\n        stringNode = \"\".concat(stringNode, \"<\").concat(child.type, \"/>\");\n      } else {\n        stringNode = \"\".concat(stringNode, \"<\").concat(elementKey, \"></\").concat(elementKey, \">\");\n      }\n    } else if (_typeof(child) === 'object') {\n      var clone = _objectSpread({}, child);\n\n      var format = clone.format;\n      delete clone.format;\n      var keys = Object.keys(clone);\n\n      if (format && keys.length === 1) {\n        stringNode = \"\".concat(stringNode, \"{{\").concat(keys[0], \", \").concat(format, \"}}\");\n      } else if (keys.length === 1) {\n        stringNode = \"\".concat(stringNode, \"{{\").concat(keys[0], \"}}\");\n      } else {\n        // not a valid interpolation object (can only contain one value plus format)\n        warn(\"react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.\", child);\n      }\n    } else {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.\", child);\n    }\n  });\n  return stringNode;\n}\n\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts) {\n  if (targetString === '') return []; // check if contains tags we need to replace from html string to react nodes\n\n  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  var emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString); // no need to replace tags in the targetstring\n\n  if (!children && !emptyChildrenButNeedsHandling) return [targetString]; // v2 -> interpolates upfront no need for \"some <0>{{var}}</0>\"\" -> will be just \"some {{var}}\" in translation file\n\n  var data = {};\n\n  function getData(childs) {\n    var childrenArray = getAsArray(childs);\n    childrenArray.forEach(function (child) {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (_typeof(child) === 'object' && !React.isValidElement(child)) Object.assign(data, child);\n    });\n  }\n\n  getData(children);\n  var interpolatedString = i18n.services.interpolator.interpolate(targetString, _objectSpread({}, data, {}, combinedTOpts), i18n.language); // parse ast from string with additional wrapper tag\n  // -> avoids issues in parser removing prepending text nodes\n\n  var ast = HTML.parse(\"<0>\".concat(interpolatedString, \"</0>\"));\n\n  function mapAST(reactNode, astNode) {\n    var reactNodes = getAsArray(reactNode);\n    var astNodes = getAsArray(astNode);\n    return astNodes.reduce(function (mem, node, i) {\n      var translationContent = node.children && node.children[0] && node.children[0].content;\n\n      if (node.type === 'tag') {\n        var child = reactNodes[parseInt(node.name, 10)] || {};\n        var isElement = React.isValidElement(child);\n\n        if (typeof child === 'string') {\n          mem.push(child);\n        } else if (hasChildren(child)) {\n          var childs = getChildren(child);\n          var mappedChildren = mapAST(childs, node.children);\n          var inner = hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;\n          if (child.dummy) child.children = inner; // needed on preact!\n\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          }), inner));\n        } else if (emptyChildrenButNeedsHandling && _typeof(child) === 'object' && child.dummy && !isElement) {\n          // we have a empty Trans node (the dummy element) with a targetstring that contains html tags needing\n          // conversion to react nodes\n          // so we just need to map the inner stuff\n          var _inner = mapAST(reactNodes\n          /* wrong but we need something */\n          , node.children);\n\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          }), _inner));\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(React.createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }));\n            } else {\n              var _inner2 = mapAST(reactNodes\n              /* wrong but we need something */\n              , node.children);\n\n              mem.push(React.createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }, _inner2));\n            }\n          } else if (node.voidElement) {\n            mem.push(\"<\".concat(node.name, \" />\"));\n          } else {\n            var _inner3 = mapAST(reactNodes\n            /* wrong but we need something */\n            , node.children);\n\n            mem.push(\"<\".concat(node.name, \">\").concat(_inner3, \"</\").concat(node.name, \">\"));\n          }\n        } else if (_typeof(child) === 'object' && !isElement) {\n          var content = node.children[0] ? translationContent : null; // v1\n          // as interpolation was done already we just have a regular content node\n          // in the translation AST while having an object in reactNodes\n          // -> push the content no need to interpolate again\n\n          if (content) mem.push(content);\n        } else if (node.children.length === 1 && translationContent) {\n          // If component does not have children, but translation - has\n          // with this in component could be components={[<span class='make-beautiful'/>]} and in translation - 'some text <0>some highlighted message</0>'\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          }), translationContent));\n        } else {\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          })));\n        }\n      } else if (node.type === 'text') {\n        mem.push(node.content);\n      }\n\n      return mem;\n    }, []);\n  } // call mapAST with having react nodes nested into additional node like\n  // we did for the string ast from translation\n  // return the children of that extra node to get expected result\n\n\n  var result = mapAST([{\n    dummy: true,\n    children: children\n  }], ast);\n  return getChildren(result[0]);\n}\n\nexport function Trans(_ref) {\n  var children = _ref.children,\n      count = _ref.count,\n      parent = _ref.parent,\n      i18nKey = _ref.i18nKey,\n      tOptions = _ref.tOptions,\n      values = _ref.values,\n      defaults = _ref.defaults,\n      components = _ref.components,\n      ns = _ref.ns,\n      i18nFromProps = _ref.i18n,\n      tFromProps = _ref.t,\n      additionalProps = _objectWithoutProperties(_ref, [\"children\", \"count\", \"parent\", \"i18nKey\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\"]);\n\n  var _ref2 = getHasUsedI18nextProvider() ? useContext(I18nContext) || {} : {},\n      i18nFromContext = _ref2.i18n,\n      defaultNSFromContext = _ref2.defaultNS;\n\n  var i18n = i18nFromProps || i18nFromContext || getI18n();\n\n  if (!i18n) {\n    warnOnce('You will need pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n\n  var t = tFromProps || i18n.t.bind(i18n) || function (k) {\n    return k;\n  };\n\n  var reactI18nextOptions = _objectSpread({}, getDefaults(), {}, i18n.options && i18n.options.react);\n\n  var useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent; // prepare having a namespace\n\n  var namespaces = ns || t.ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  var defaultValue = defaults || nodesToString('', children, 0, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue;\n  var hashTransKey = reactI18nextOptions.hashTransKey;\n  var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n  var interpolationOverride = values ? {} : {\n    interpolation: {\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n\n  var combinedTOpts = _objectSpread({}, tOptions, {\n    count: count\n  }, values, {}, interpolationOverride, {\n    defaultValue: defaultValue,\n    ns: namespaces\n  });\n\n  var translation = key ? t(key, combinedTOpts) : defaultValue;\n  if (!useAsParent) return renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts);\n  return React.createElement(useAsParent, additionalProps, renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}