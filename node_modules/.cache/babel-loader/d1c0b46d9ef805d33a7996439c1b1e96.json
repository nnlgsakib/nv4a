{"ast":null,"code":"import _slicedToArray from\"/root/experiment/nova-explorer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import { useEffect } from \"react\";\n// import { uniqBy } from \"lodash\";\nimport React from\"react\";// const mergeChainSets = (c1: Chain[], c2: Chain[]) => uniqBy(c1.concat(c2), \"name\");\nexport default function(){var _React$useState=React.useState([{name:\"MIND testnet\",network:\"Mainnet\",rpc:[\"https://testnet-msc.mindchain.info/\"]},{name:\"Nebula Testnet\",network:\"Testnet\",rpc:[\"https://testnet.rpc.novanetwork.io:9070/\"]},{name:\"Ethereum\",network:\"Mainnet\",rpc:[\"https://mainnet.infura.io/v3/56d2793090b6497192afd6454c815389\"]},{name:\"Ethereum Classic\",network:\"Mainnet\",rpc:[\"https://www.ethercluster.com/etc\"]},{name:\"Binance Smart Chain\",network:\"Mainnet\",rpc:[\"https://bsc-dataseed1.binance.org/\"]},{name:\"Fantom Opera\",network:\"Mainnet\",rpc:[\"https://rpc.ftm.tools/\"]}]),_React$useState2=_slicedToArray(_React$useState,2),chains=_React$useState2[0],setChains=_React$useState2[1];// uncomment once we add 'chain list provider' concept. This list blows.\n// useEffect(() => {\n//   if (chains === undefined) {\n//     fetch(\"https://chainid.network/chains.json\")\n//       .then((r) => r.json())\n//       .then((chainIdNetwork) => {\n//         const filteredChains = chainIdNetwork.filter((c: Chain) => {\n//           if (c.rpc.length === 0) {\n//             return false;\n//           }\n//           return true;\n//         });\n//         if (chains) {\n//           setChains(mergeChainSets(chains, filteredChains));\n//         } else {\n//           setChains(filteredChains);\n//         };\n//       });\n//   }\n// }, [chains]);\nreturn[chains,setChains];}","map":{"version":3,"names":["React","_React$useState","useState","name","network","rpc","_React$useState2","_slicedToArray","chains","setChains"],"sources":["/root/experiment/nova-explorer/src/hooks/useChainList.ts"],"sourcesContent":["// import { useEffect } from \"react\";\n// import { uniqBy } from \"lodash\";\nimport { IChain as Chain } from \"../models/chain\";\nimport React from \"react\";\n\n// const mergeChainSets = (c1: Chain[], c2: Chain[]) => uniqBy(c1.concat(c2), \"name\");\n\nexport default function() {\n  const [chains, setChains] = React.useState<Chain[]>([\n    {\n      name: \"MIND testnet\",\n      network: \"Mainnet\",\n      rpc: [\"https://testnet-msc.mindchain.info/\"],\n    },\n    {\n      name: \"Nebula Testnet\",\n      network: \"Testnet\",\n      rpc: [\"https://testnet.rpc.novanetwork.io:9070/\"],\n    },\n    {\n      name: \"Ethereum\",\n      network: \"Mainnet\",\n      rpc: [\"https://mainnet.infura.io/v3/56d2793090b6497192afd6454c815389\"],\n    },\n    {\n      name: \"Ethereum Classic\",\n      network: \"Mainnet\",\n      rpc: [\"https://www.ethercluster.com/etc\"],\n    },\n    {\n      name: \"Binance Smart Chain\",\n      network: \"Mainnet\",\n      rpc: [\"https://bsc-dataseed1.binance.org/\"],\n    },\n    {\n      name: \"Fantom Opera\",\n      network: \"Mainnet\",\n      rpc: [\"https://rpc.ftm.tools/\"],\n    },\n  ]);\n\n  // uncomment once we add 'chain list provider' concept. This list blows.\n\n  // useEffect(() => {\n  //   if (chains === undefined) {\n  //     fetch(\"https://chainid.network/chains.json\")\n  //       .then((r) => r.json())\n  //       .then((chainIdNetwork) => {\n  //         const filteredChains = chainIdNetwork.filter((c: Chain) => {\n  //           if (c.rpc.length === 0) {\n  //             return false;\n  //           }\n  //           return true;\n  //         });\n  //         if (chains) {\n  //           setChains(mergeChainSets(chains, filteredChains));\n  //         } else {\n  //           setChains(filteredChains);\n  //         };\n  //       });\n  //   }\n  // }, [chains]);\n\n  return [chains, setChains];\n}\n"],"mappings":"qJAAA;AACA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AAEA,cAAe,WAAW,CACxB,IAAAC,eAAA,CAA4BD,KAAK,CAACE,QAAQ,CAAU,CAClD,CACEC,IAAI,CAAE,cAAc,CACpBC,OAAO,CAAE,SAAS,CAClBC,GAAG,CAAE,CAAC,qCAAqC,CAC7C,CAAC,CACD,CACEF,IAAI,CAAE,gBAAgB,CACtBC,OAAO,CAAE,SAAS,CAClBC,GAAG,CAAE,CAAC,0CAA0C,CAClD,CAAC,CACD,CACEF,IAAI,CAAE,UAAU,CAChBC,OAAO,CAAE,SAAS,CAClBC,GAAG,CAAE,CAAC,+DAA+D,CACvE,CAAC,CACD,CACEF,IAAI,CAAE,kBAAkB,CACxBC,OAAO,CAAE,SAAS,CAClBC,GAAG,CAAE,CAAC,kCAAkC,CAC1C,CAAC,CACD,CACEF,IAAI,CAAE,qBAAqB,CAC3BC,OAAO,CAAE,SAAS,CAClBC,GAAG,CAAE,CAAC,oCAAoC,CAC5C,CAAC,CACD,CACEF,IAAI,CAAE,cAAc,CACpBC,OAAO,CAAE,SAAS,CAClBC,GAAG,CAAE,CAAC,wBAAwB,CAChC,CAAC,CACF,CAAC,CAAAC,gBAAA,CAAAC,cAAA,CAAAN,eAAA,IA/BKO,MAAM,CAAAF,gBAAA,IAAEG,SAAS,CAAAH,gBAAA,IAiCxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,CAACE,MAAM,CAAEC,SAAS,CAAC,CAC5B"},"metadata":{},"sourceType":"module"}