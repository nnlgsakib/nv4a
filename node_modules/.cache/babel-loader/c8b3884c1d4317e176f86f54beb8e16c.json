{"ast":null,"code":"import _includes from \"lodash/includes\";\nimport _uniq from \"lodash/uniq\";\nimport _pickBy from \"lodash/pickBy\";\nimport _without from \"lodash/without\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _assign from \"lodash/assign\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nexport default {\n  /* Returns all own and shared events that should be attached to a single target element,\n   * i.e. an individual bar specified by target: \"data\", eventKey: [index].\n   * Returned events are scoped to the appropriate state. Either that of the component itself\n   * (i.e. VictoryBar) in the case of own events, or that of the parent component\n   * (i.e. VictoryChart) in the case of shared events\n   */\n  // eslint-disable-next-line max-params\n  getEvents: function getEvents(props, target, eventKey, getScopedEvents) {\n    var _this = this;\n\n    // Returns all events that apply to a particular target element\n    var getEventsByTarget = function getEventsByTarget(events) {\n      var getSelectedEvents = function getSelectedEvents() {\n        var targetEvents = events.reduce(function (memo, event) {\n          if (event.target !== undefined) {\n            var matchesTarget = Array.isArray(event.target) ? _includes(event.target, target) : \"\".concat(event.target) === \"\".concat(target);\n            return matchesTarget ? memo.concat(event) : memo;\n          }\n          return memo.concat(event);\n        }, []);\n        if (eventKey !== undefined && target !== \"parent\") {\n          return targetEvents.filter(function (obj) {\n            var targetKeys = obj.eventKey;\n            var useKey = function useKey(key) {\n              return key ? \"\".concat(key) === \"\".concat(eventKey) : true;\n            };\n            return Array.isArray(targetKeys) ? targetKeys.some(function (k) {\n              return useKey(k);\n            }) : useKey(targetKeys);\n          });\n        }\n        return targetEvents;\n      };\n      var selectedEvents = getSelectedEvents();\n      return Array.isArray(selectedEvents) && selectedEvents.reduce(function (memo, event) {\n        return event ? _assign(memo, event.eventHandlers) : memo;\n      }, {});\n    };\n    /* Returns all events from props and defaultEvents from components. Events handlers\n     * specified in props will override handlers for the same event if they are also\n     * specified in defaultEvents of a sub-component\n     */\n\n    var getAllEvents = function getAllEvents() {\n      if (Array.isArray(_this.componentEvents)) {\n        var _this$componentEvents;\n        return Array.isArray(props.events) ? (_this$componentEvents = _this.componentEvents).concat.apply(_this$componentEvents, _toConsumableArray(props.events)) : _this.componentEvents;\n      }\n      return props.events;\n    };\n    var allEvents = getAllEvents();\n    var ownEvents = allEvents && _isFunction(getScopedEvents) ? getScopedEvents(getEventsByTarget(allEvents), target) : undefined;\n    if (!props.sharedEvents) {\n      return ownEvents;\n    }\n    var getSharedEvents = props.sharedEvents.getEvents;\n    var sharedEvents = props.sharedEvents.events && getSharedEvents(getEventsByTarget(props.sharedEvents.events), target);\n    return _assign({}, sharedEvents, ownEvents);\n  },\n  /* Returns a modified events object where each event handler is replaced by a new\n   * function that calls the original handler and then calls setState with the return\n   * of the original event handler assigned to state property that maps to the target\n   * element.\n   */\n  // eslint-disable-next-line max-params\n  getScopedEvents: function getScopedEvents(events, namespace, childType, baseProps) {\n    var _this2 = this;\n    if (_isEmpty(events)) {\n      return {};\n    }\n    baseProps = baseProps || this.baseProps; // returns the original base props or base state of a given target element\n\n    var getTargetProps = function getTargetProps(identifier, type) {\n      var childName = identifier.childName,\n        target = identifier.target,\n        key = identifier.key;\n      var baseType = type === \"props\" ? baseProps : _this2.state || {};\n      var base = childName === undefined || childName === null || !baseType[childName] ? baseType : baseType[childName];\n      return key === \"parent\" ? base.parent : base[key] && base[key][target];\n    }; // Returns the state object with the mutation caused by a given eventReturn\n    // applied to the appropriate property on the state object\n\n    var parseEvent = function parseEvent(eventReturn, eventKey) {\n      var childNames = namespace === \"parent\" ? eventReturn.childName : eventReturn.childName || childType;\n      var target = eventReturn.target || namespace; // returns all eventKeys to modify for a targeted childName\n\n      var getKeys = function getKeys(childName) {\n        if (target === \"parent\") {\n          return \"parent\";\n        }\n        if (eventReturn.eventKey === \"all\") {\n          return baseProps[childName] ? _without(Object.keys(baseProps[childName]), \"parent\") : _without(Object.keys(baseProps), \"parent\");\n        } else if (eventReturn.eventKey === undefined && eventKey === \"parent\") {\n          return baseProps[childName] ? Object.keys(baseProps[childName]) : Object.keys(baseProps);\n        }\n        return eventReturn.eventKey !== undefined ? eventReturn.eventKey : eventKey;\n      }; // returns the state object with mutated props applied for a single key\n\n      var getMutationObject = function getMutationObject(key, childName) {\n        var baseState = _this2.state || {};\n        if (!_isFunction(eventReturn.mutation)) {\n          return baseState;\n        }\n        var mutationTargetProps = getTargetProps({\n          childName: childName,\n          key: key,\n          target: target\n        }, \"props\");\n        var mutationTargetState = getTargetProps({\n          childName: childName,\n          key: key,\n          target: target\n        }, \"state\");\n        var mutatedProps = eventReturn.mutation(_assign({}, mutationTargetProps, mutationTargetState), baseProps);\n        var childState = baseState[childName] || {};\n        var filterState = function filterState(state) {\n          if (state[key] && state[key][target]) {\n            delete state[key][target];\n          }\n          if (state[key] && !Object.keys(state[key]).length) {\n            delete state[key];\n          }\n          return state;\n        };\n        var extendState = function extendState(state) {\n          return target === \"parent\" ? _assign(state, _defineProperty({}, key, _assign(state[key], mutatedProps))) : _assign(state, _defineProperty({}, key, _assign(state[key], _defineProperty({}, target, mutatedProps))));\n        };\n        var updateState = function updateState(state) {\n          return mutatedProps ? extendState(state) : filterState(state);\n        };\n        return childName !== undefined && childName !== null ? _assign(baseState, _defineProperty({}, childName, updateState(childState))) : updateState(baseState);\n      }; // returns entire mutated state for a given childName\n\n      var getReturnByChild = function getReturnByChild(childName) {\n        var mutationKeys = getKeys(childName);\n        return Array.isArray(mutationKeys) ? mutationKeys.reduce(function (memo, key) {\n          return _assign(memo, getMutationObject(key, childName));\n        }, {}) : getMutationObject(mutationKeys, childName);\n      }; // returns an entire mutated state for all children\n\n      var allChildNames = childNames === \"all\" ? _without(Object.keys(baseProps), \"parent\") : childNames;\n      return Array.isArray(allChildNames) ? allChildNames.reduce(function (memo, childName) {\n        return _assign(memo, getReturnByChild(childName));\n      }, {}) : getReturnByChild(allChildNames);\n    }; // Parses an array of event returns into a single state mutation\n\n    var parseEventReturn = function parseEventReturn(eventReturn, eventKey) {\n      return Array.isArray(eventReturn) ? eventReturn.reduce(function (memo, props) {\n        memo = _assign({}, memo, parseEvent(props, eventKey));\n        return memo;\n      }, {}) : parseEvent(eventReturn, eventKey);\n    };\n    var compileCallbacks = function compileCallbacks(eventReturn) {\n      var getCallback = function getCallback(obj) {\n        return _isFunction(obj.callback) && obj.callback;\n      };\n      var callbacks = Array.isArray(eventReturn) ? eventReturn.map(function (evtObj) {\n        return getCallback(evtObj);\n      }) : [getCallback(eventReturn)];\n      var callbackArray = callbacks.filter(function (callback) {\n        return callback !== false;\n      });\n      return callbackArray.length ? function () {\n        return callbackArray.forEach(function (callback) {\n          return callback();\n        });\n      } : undefined;\n    }; // A function that calls a particular event handler, parses its return\n    // into a state mutation, and calls setState\n    // eslint-disable-next-line max-params\n\n    var onEvent = function onEvent(evt, childProps, eventKey, eventName) {\n      var eventReturn = events[eventName](evt, childProps, eventKey, _this2);\n      if (eventReturn) {\n        var callbacks = compileCallbacks(eventReturn);\n        _this2.setState(parseEventReturn(eventReturn, eventKey), callbacks);\n      }\n    }; // returns a new events object with enhanced event handlers\n\n    return Object.keys(events).reduce(function (memo, event) {\n      memo[event] = onEvent;\n      return memo;\n    }, {});\n  },\n  /* Returns a partially applied event handler for a specific target element\n   * This allows event handlers to have access to props controlling each element\n   */\n  getPartialEvents: function getPartialEvents(events, eventKey, childProps) {\n    return events ? Object.keys(events).reduce(function (memo, eventName) {\n      var appliedEvent = function appliedEvent(evt) {\n        return events[eventName](evt, childProps, eventKey, eventName);\n      };\n      memo[eventName] = appliedEvent;\n      return memo;\n    }, {}) : {};\n  },\n  /* Returns the property of the state object corresponding to event changes for\n   * a particular element\n   */\n  getEventState: function getEventState(eventKey, namespace, childType) {\n    var state = this.state || {};\n    if (!childType) {\n      return eventKey === \"parent\" ? state[eventKey] && state[eventKey][namespace] || state[eventKey] : state[eventKey] && state[eventKey][namespace];\n    }\n    return state[childType] && state[childType][eventKey] && state[childType][eventKey][namespace];\n  },\n  /**\n   * Returns a set of all mutations for shared events\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps an object that describes all props for children of VictorySharedEvents\n   * @param  {Object} baseState an object that describes state for children of VictorySharedEvents\n   * @param  {Array} childNames an array of childNames\n   *\n   * @return {Object} a object describing all mutations for VictorySharedEvents\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutationsWithChildren: function getExternalMutationsWithChildren(mutations, baseProps, baseState, childNames) {\n    var _this3 = this;\n    baseProps = baseProps || {};\n    baseState = baseState || {};\n    return childNames.reduce(function (memo, childName) {\n      var childState = baseState[childName];\n      var mutation = _this3.getExternalMutations(mutations, baseProps[childName], baseState[childName], childName);\n      memo[childName] = mutation ? mutation : childState;\n      return _pickBy(memo, function (v) {\n        return !_isEmpty(v);\n      });\n    }, {});\n  },\n  /**\n   * Returns a set of all mutations for a component\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps a props object (scoped to a childName when used by shared events)\n   * @param  {Object} baseState a state object (scoped to a childName when used by shared events)\n   * @param  {String} childName an optional childName\n   *\n   * @return {Object} a object describing mutations for a given component\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutations: function getExternalMutations(mutations, baseProps, baseState, childName) {\n    var _this4 = this;\n    baseProps = baseProps || {};\n    baseState = baseState || {};\n    var eventKeys = Object.keys(baseProps);\n    return eventKeys.reduce(function (memo, eventKey) {\n      var keyState = baseState[eventKey] || {};\n      var keyProps = baseProps[eventKey] || {};\n      if (eventKey === \"parent\") {\n        var identifier = {\n          eventKey: eventKey,\n          target: \"parent\"\n        };\n        var mutation = _this4.getExternalMutation(mutations, keyProps, keyState, identifier);\n        memo[eventKey] = mutation !== undefined ? _assign({}, keyState, mutation) : keyState;\n      } else {\n        // use keys from both state and props so that elements not intially included in baseProps\n        // will be used. (i.e. labels)\n        var targets = _uniq(Object.keys(keyProps).concat(Object.keys(keyState)));\n        memo[eventKey] = targets.reduce(function (m, target) {\n          var identifier = {\n            eventKey: eventKey,\n            target: target,\n            childName: childName\n          };\n          var mutation = _this4.getExternalMutation(mutations, keyProps[target], keyState[target], identifier);\n          m[target] = mutation !== undefined ? _assign({}, keyState[target], mutation) : keyState[target];\n          return _pickBy(m, function (v) {\n            return !_isEmpty(v);\n          });\n        }, {});\n      }\n      return _pickBy(memo, function (v) {\n        return !_isEmpty(v);\n      });\n    }, {});\n  },\n  /**\n   * Returns a set of mutations for a particular element given scoped baseProps and baseState\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps a props object (scoped the element specified by the identifier)\n   * @param  {Object} baseState a state object (scoped the element specified by the identifier)\n   * @param  {Object} identifier { eventKey, target, childName }\n   *\n   * @return {Object | undefined} a object describing mutations for a given element, or undefined\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutation: function getExternalMutation(mutations, baseProps, baseState, identifier) {\n    var filterMutations = function filterMutations(mutation, type) {\n      if (typeof mutation[type] === \"string\") {\n        return mutation[type] === \"all\" || mutation[type] === identifier[type];\n      } else if (Array.isArray(mutation[type])) {\n        // coerce arrays to strings before matching\n        var stringArray = mutation[type].map(function (m) {\n          return \"\".concat(m);\n        });\n        return _includes(stringArray, identifier[type]);\n      } else {\n        return false;\n      }\n    };\n    mutations = Array.isArray(mutations) ? mutations : [mutations];\n    var scopedMutations = mutations;\n    if (identifier.childName) {\n      scopedMutations = mutations.filter(function (m) {\n        return filterMutations(m, \"childName\");\n      });\n    } // find any mutation objects that match the target\n\n    var targetMutations = scopedMutations.filter(function (m) {\n      return filterMutations(m, \"target\");\n    });\n    if (_isEmpty(targetMutations)) {\n      return undefined;\n    }\n    var keyMutations = targetMutations.filter(function (m) {\n      return filterMutations(m, \"eventKey\");\n    });\n    if (_isEmpty(keyMutations)) {\n      return undefined;\n    }\n    return keyMutations.reduce(function (memo, curr) {\n      var mutationFunction = curr && _isFunction(curr.mutation) ? curr.mutation : function () {\n        return undefined;\n      };\n      var currentMutation = mutationFunction(_assign({}, baseProps, baseState));\n      return _assign({}, memo, currentMutation);\n    }, {});\n  },\n  /* Returns an array of defaultEvents from sub-components of a given component.\n   * i.e. any static `defaultEvents` on `labelComponent` will be returned\n   */\n  getComponentEvents: function getComponentEvents(props, components) {\n    var events = Array.isArray(components) && components.reduce(function (memo, componentName) {\n      var _memo;\n      var component = props[componentName];\n      var defaultEvents = component && component.type && component.type.defaultEvents;\n      var componentEvents = _isFunction(defaultEvents) ? defaultEvents(component.props) : defaultEvents;\n      memo = Array.isArray(componentEvents) ? (_memo = memo).concat.apply(_memo, _toConsumableArray(componentEvents)) : memo;\n      return memo;\n    }, []);\n    return events && events.length ? events : undefined;\n  }\n};","map":{"version":3,"names":["_includes","_uniq","_pickBy","_without","_isFunction","_isEmpty","_assign","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","i","arr2","length","getEvents","props","target","eventKey","getScopedEvents","_this","getEventsByTarget","events","getSelectedEvents","targetEvents","reduce","memo","event","undefined","matchesTarget","concat","filter","targetKeys","useKey","some","k","selectedEvents","eventHandlers","getAllEvents","componentEvents","_this$componentEvents","apply","allEvents","ownEvents","sharedEvents","getSharedEvents","namespace","childType","baseProps","_this2","getTargetProps","identifier","type","childName","baseType","state","base","parent","parseEvent","eventReturn","childNames","getKeys","keys","getMutationObject","baseState","mutation","mutationTargetProps","mutationTargetState","mutatedProps","childState","filterState","extendState","updateState","getReturnByChild","mutationKeys","allChildNames","parseEventReturn","compileCallbacks","getCallback","callback","callbacks","map","evtObj","callbackArray","forEach","onEvent","evt","childProps","eventName","setState","getPartialEvents","appliedEvent","getEventState","getExternalMutationsWithChildren","mutations","_this3","getExternalMutations","v","_this4","eventKeys","keyState","keyProps","getExternalMutation","targets","m","filterMutations","stringArray","scopedMutations","targetMutations","keyMutations","curr","mutationFunction","currentMutation","getComponentEvents","components","componentName","_memo","component","defaultEvents"],"sources":["/root/experiment/nova-explorer/node_modules/victory-core/es/victory-util/events.js"],"sourcesContent":["import _includes from \"lodash/includes\";\nimport _uniq from \"lodash/uniq\";\nimport _pickBy from \"lodash/pickBy\";\nimport _without from \"lodash/without\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _assign from \"lodash/assign\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nexport default {\n  /* Returns all own and shared events that should be attached to a single target element,\n   * i.e. an individual bar specified by target: \"data\", eventKey: [index].\n   * Returned events are scoped to the appropriate state. Either that of the component itself\n   * (i.e. VictoryBar) in the case of own events, or that of the parent component\n   * (i.e. VictoryChart) in the case of shared events\n   */\n  // eslint-disable-next-line max-params\n  getEvents: function (props, target, eventKey, getScopedEvents) {\n    var _this = this;\n\n    // Returns all events that apply to a particular target element\n    var getEventsByTarget = function (events) {\n      var getSelectedEvents = function () {\n        var targetEvents = events.reduce(function (memo, event) {\n          if (event.target !== undefined) {\n            var matchesTarget = Array.isArray(event.target) ? _includes(event.target, target) : \"\".concat(event.target) === \"\".concat(target);\n            return matchesTarget ? memo.concat(event) : memo;\n          }\n\n          return memo.concat(event);\n        }, []);\n\n        if (eventKey !== undefined && target !== \"parent\") {\n          return targetEvents.filter(function (obj) {\n            var targetKeys = obj.eventKey;\n\n            var useKey = function (key) {\n              return key ? \"\".concat(key) === \"\".concat(eventKey) : true;\n            };\n\n            return Array.isArray(targetKeys) ? targetKeys.some(function (k) {\n              return useKey(k);\n            }) : useKey(targetKeys);\n          });\n        }\n\n        return targetEvents;\n      };\n\n      var selectedEvents = getSelectedEvents();\n      return Array.isArray(selectedEvents) && selectedEvents.reduce(function (memo, event) {\n        return event ? _assign(memo, event.eventHandlers) : memo;\n      }, {});\n    };\n    /* Returns all events from props and defaultEvents from components. Events handlers\n     * specified in props will override handlers for the same event if they are also\n     * specified in defaultEvents of a sub-component\n     */\n\n\n    var getAllEvents = function () {\n      if (Array.isArray(_this.componentEvents)) {\n        var _this$componentEvents;\n\n        return Array.isArray(props.events) ? (_this$componentEvents = _this.componentEvents).concat.apply(_this$componentEvents, _toConsumableArray(props.events)) : _this.componentEvents;\n      }\n\n      return props.events;\n    };\n\n    var allEvents = getAllEvents();\n    var ownEvents = allEvents && _isFunction(getScopedEvents) ? getScopedEvents(getEventsByTarget(allEvents), target) : undefined;\n\n    if (!props.sharedEvents) {\n      return ownEvents;\n    }\n\n    var getSharedEvents = props.sharedEvents.getEvents;\n    var sharedEvents = props.sharedEvents.events && getSharedEvents(getEventsByTarget(props.sharedEvents.events), target);\n    return _assign({}, sharedEvents, ownEvents);\n  },\n\n  /* Returns a modified events object where each event handler is replaced by a new\n   * function that calls the original handler and then calls setState with the return\n   * of the original event handler assigned to state property that maps to the target\n   * element.\n   */\n  // eslint-disable-next-line max-params\n  getScopedEvents: function (events, namespace, childType, baseProps) {\n    var _this2 = this;\n\n    if (_isEmpty(events)) {\n      return {};\n    }\n\n    baseProps = baseProps || this.baseProps; // returns the original base props or base state of a given target element\n\n    var getTargetProps = function (identifier, type) {\n      var childName = identifier.childName,\n          target = identifier.target,\n          key = identifier.key;\n      var baseType = type === \"props\" ? baseProps : _this2.state || {};\n      var base = childName === undefined || childName === null || !baseType[childName] ? baseType : baseType[childName];\n      return key === \"parent\" ? base.parent : base[key] && base[key][target];\n    }; // Returns the state object with the mutation caused by a given eventReturn\n    // applied to the appropriate property on the state object\n\n\n    var parseEvent = function (eventReturn, eventKey) {\n      var childNames = namespace === \"parent\" ? eventReturn.childName : eventReturn.childName || childType;\n      var target = eventReturn.target || namespace; // returns all eventKeys to modify for a targeted childName\n\n      var getKeys = function (childName) {\n        if (target === \"parent\") {\n          return \"parent\";\n        }\n\n        if (eventReturn.eventKey === \"all\") {\n          return baseProps[childName] ? _without(Object.keys(baseProps[childName]), \"parent\") : _without(Object.keys(baseProps), \"parent\");\n        } else if (eventReturn.eventKey === undefined && eventKey === \"parent\") {\n          return baseProps[childName] ? Object.keys(baseProps[childName]) : Object.keys(baseProps);\n        }\n\n        return eventReturn.eventKey !== undefined ? eventReturn.eventKey : eventKey;\n      }; // returns the state object with mutated props applied for a single key\n\n\n      var getMutationObject = function (key, childName) {\n        var baseState = _this2.state || {};\n\n        if (!_isFunction(eventReturn.mutation)) {\n          return baseState;\n        }\n\n        var mutationTargetProps = getTargetProps({\n          childName: childName,\n          key: key,\n          target: target\n        }, \"props\");\n        var mutationTargetState = getTargetProps({\n          childName: childName,\n          key: key,\n          target: target\n        }, \"state\");\n        var mutatedProps = eventReturn.mutation(_assign({}, mutationTargetProps, mutationTargetState), baseProps);\n        var childState = baseState[childName] || {};\n\n        var filterState = function (state) {\n          if (state[key] && state[key][target]) {\n            delete state[key][target];\n          }\n\n          if (state[key] && !Object.keys(state[key]).length) {\n            delete state[key];\n          }\n\n          return state;\n        };\n\n        var extendState = function (state) {\n          return target === \"parent\" ? _assign(state, _defineProperty({}, key, _assign(state[key], mutatedProps))) : _assign(state, _defineProperty({}, key, _assign(state[key], _defineProperty({}, target, mutatedProps))));\n        };\n\n        var updateState = function (state) {\n          return mutatedProps ? extendState(state) : filterState(state);\n        };\n\n        return childName !== undefined && childName !== null ? _assign(baseState, _defineProperty({}, childName, updateState(childState))) : updateState(baseState);\n      }; // returns entire mutated state for a given childName\n\n\n      var getReturnByChild = function (childName) {\n        var mutationKeys = getKeys(childName);\n        return Array.isArray(mutationKeys) ? mutationKeys.reduce(function (memo, key) {\n          return _assign(memo, getMutationObject(key, childName));\n        }, {}) : getMutationObject(mutationKeys, childName);\n      }; // returns an entire mutated state for all children\n\n\n      var allChildNames = childNames === \"all\" ? _without(Object.keys(baseProps), \"parent\") : childNames;\n      return Array.isArray(allChildNames) ? allChildNames.reduce(function (memo, childName) {\n        return _assign(memo, getReturnByChild(childName));\n      }, {}) : getReturnByChild(allChildNames);\n    }; // Parses an array of event returns into a single state mutation\n\n\n    var parseEventReturn = function (eventReturn, eventKey) {\n      return Array.isArray(eventReturn) ? eventReturn.reduce(function (memo, props) {\n        memo = _assign({}, memo, parseEvent(props, eventKey));\n        return memo;\n      }, {}) : parseEvent(eventReturn, eventKey);\n    };\n\n    var compileCallbacks = function (eventReturn) {\n      var getCallback = function (obj) {\n        return _isFunction(obj.callback) && obj.callback;\n      };\n\n      var callbacks = Array.isArray(eventReturn) ? eventReturn.map(function (evtObj) {\n        return getCallback(evtObj);\n      }) : [getCallback(eventReturn)];\n      var callbackArray = callbacks.filter(function (callback) {\n        return callback !== false;\n      });\n      return callbackArray.length ? function () {\n        return callbackArray.forEach(function (callback) {\n          return callback();\n        });\n      } : undefined;\n    }; // A function that calls a particular event handler, parses its return\n    // into a state mutation, and calls setState\n    // eslint-disable-next-line max-params\n\n\n    var onEvent = function (evt, childProps, eventKey, eventName) {\n      var eventReturn = events[eventName](evt, childProps, eventKey, _this2);\n\n      if (eventReturn) {\n        var callbacks = compileCallbacks(eventReturn);\n\n        _this2.setState(parseEventReturn(eventReturn, eventKey), callbacks);\n      }\n    }; // returns a new events object with enhanced event handlers\n\n\n    return Object.keys(events).reduce(function (memo, event) {\n      memo[event] = onEvent;\n      return memo;\n    }, {});\n  },\n\n  /* Returns a partially applied event handler for a specific target element\n   * This allows event handlers to have access to props controlling each element\n   */\n  getPartialEvents: function (events, eventKey, childProps) {\n    return events ? Object.keys(events).reduce(function (memo, eventName) {\n      var appliedEvent = function (evt) {\n        return events[eventName](evt, childProps, eventKey, eventName);\n      };\n\n      memo[eventName] = appliedEvent;\n      return memo;\n    }, {}) : {};\n  },\n\n  /* Returns the property of the state object corresponding to event changes for\n   * a particular element\n   */\n  getEventState: function (eventKey, namespace, childType) {\n    var state = this.state || {};\n\n    if (!childType) {\n      return eventKey === \"parent\" ? state[eventKey] && state[eventKey][namespace] || state[eventKey] : state[eventKey] && state[eventKey][namespace];\n    }\n\n    return state[childType] && state[childType][eventKey] && state[childType][eventKey][namespace];\n  },\n\n  /**\n   * Returns a set of all mutations for shared events\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps an object that describes all props for children of VictorySharedEvents\n   * @param  {Object} baseState an object that describes state for children of VictorySharedEvents\n   * @param  {Array} childNames an array of childNames\n   *\n   * @return {Object} a object describing all mutations for VictorySharedEvents\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutationsWithChildren: function (mutations, baseProps, baseState, childNames) {\n    var _this3 = this;\n\n    baseProps = baseProps || {};\n    baseState = baseState || {};\n    return childNames.reduce(function (memo, childName) {\n      var childState = baseState[childName];\n\n      var mutation = _this3.getExternalMutations(mutations, baseProps[childName], baseState[childName], childName);\n\n      memo[childName] = mutation ? mutation : childState;\n      return _pickBy(memo, function (v) {\n        return !_isEmpty(v);\n      });\n    }, {});\n  },\n\n  /**\n   * Returns a set of all mutations for a component\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps a props object (scoped to a childName when used by shared events)\n   * @param  {Object} baseState a state object (scoped to a childName when used by shared events)\n   * @param  {String} childName an optional childName\n   *\n   * @return {Object} a object describing mutations for a given component\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutations: function (mutations, baseProps, baseState, childName) {\n    var _this4 = this;\n\n    baseProps = baseProps || {};\n    baseState = baseState || {};\n    var eventKeys = Object.keys(baseProps);\n    return eventKeys.reduce(function (memo, eventKey) {\n      var keyState = baseState[eventKey] || {};\n      var keyProps = baseProps[eventKey] || {};\n\n      if (eventKey === \"parent\") {\n        var identifier = {\n          eventKey: eventKey,\n          target: \"parent\"\n        };\n\n        var mutation = _this4.getExternalMutation(mutations, keyProps, keyState, identifier);\n\n        memo[eventKey] = mutation !== undefined ? _assign({}, keyState, mutation) : keyState;\n      } else {\n        // use keys from both state and props so that elements not intially included in baseProps\n        // will be used. (i.e. labels)\n        var targets = _uniq(Object.keys(keyProps).concat(Object.keys(keyState)));\n\n        memo[eventKey] = targets.reduce(function (m, target) {\n          var identifier = {\n            eventKey: eventKey,\n            target: target,\n            childName: childName\n          };\n\n          var mutation = _this4.getExternalMutation(mutations, keyProps[target], keyState[target], identifier);\n\n          m[target] = mutation !== undefined ? _assign({}, keyState[target], mutation) : keyState[target];\n          return _pickBy(m, function (v) {\n            return !_isEmpty(v);\n          });\n        }, {});\n      }\n\n      return _pickBy(memo, function (v) {\n        return !_isEmpty(v);\n      });\n    }, {});\n  },\n\n  /**\n   * Returns a set of mutations for a particular element given scoped baseProps and baseState\n   *\n   * @param  {Array} mutations an array of mutations objects\n   * @param  {Object} baseProps a props object (scoped the element specified by the identifier)\n   * @param  {Object} baseState a state object (scoped the element specified by the identifier)\n   * @param  {Object} identifier { eventKey, target, childName }\n   *\n   * @return {Object | undefined} a object describing mutations for a given element, or undefined\n   */\n  // eslint-disable-next-line max-params\n  getExternalMutation: function (mutations, baseProps, baseState, identifier) {\n    var filterMutations = function (mutation, type) {\n      if (typeof mutation[type] === \"string\") {\n        return mutation[type] === \"all\" || mutation[type] === identifier[type];\n      } else if (Array.isArray(mutation[type])) {\n        // coerce arrays to strings before matching\n        var stringArray = mutation[type].map(function (m) {\n          return \"\".concat(m);\n        });\n        return _includes(stringArray, identifier[type]);\n      } else {\n        return false;\n      }\n    };\n\n    mutations = Array.isArray(mutations) ? mutations : [mutations];\n    var scopedMutations = mutations;\n\n    if (identifier.childName) {\n      scopedMutations = mutations.filter(function (m) {\n        return filterMutations(m, \"childName\");\n      });\n    } // find any mutation objects that match the target\n\n\n    var targetMutations = scopedMutations.filter(function (m) {\n      return filterMutations(m, \"target\");\n    });\n\n    if (_isEmpty(targetMutations)) {\n      return undefined;\n    }\n\n    var keyMutations = targetMutations.filter(function (m) {\n      return filterMutations(m, \"eventKey\");\n    });\n\n    if (_isEmpty(keyMutations)) {\n      return undefined;\n    }\n\n    return keyMutations.reduce(function (memo, curr) {\n      var mutationFunction = curr && _isFunction(curr.mutation) ? curr.mutation : function () {\n        return undefined;\n      };\n      var currentMutation = mutationFunction(_assign({}, baseProps, baseState));\n      return _assign({}, memo, currentMutation);\n    }, {});\n  },\n\n  /* Returns an array of defaultEvents from sub-components of a given component.\n   * i.e. any static `defaultEvents` on `labelComponent` will be returned\n   */\n  getComponentEvents: function (props, components) {\n    var events = Array.isArray(components) && components.reduce(function (memo, componentName) {\n      var _memo;\n\n      var component = props[componentName];\n      var defaultEvents = component && component.type && component.type.defaultEvents;\n      var componentEvents = _isFunction(defaultEvents) ? defaultEvents(component.props) : defaultEvents;\n      memo = Array.isArray(componentEvents) ? (_memo = memo).concat.apply(_memo, _toConsumableArray(componentEvents)) : memo;\n      return memo;\n    }, []);\n    return events && events.length ? events : undefined;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}