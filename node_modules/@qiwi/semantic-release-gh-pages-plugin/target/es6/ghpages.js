/** @module semantic-release-gh-pages-plugin */
import { publish as ghpagePublish, clean } from 'gh-pages';
import execa from 'execa';
/**
 * @private
 */
export const OK = { status: 'OK' };
/**
 * @private
 */
export const pullTags = (opts) => {
    if (opts.pullTagsBranch === '') {
        return Promise.resolve();
    }
    const repo = '' + opts.repo;
    const pullTagsBranch = '' + opts.pullTagsBranch;
    const execaOpts = {
        env: opts.env,
        cwd: opts.cwd
    };
    return execa('git', ['pull', '--tags', '--force', repo, pullTagsBranch], execaOpts);
};
/**
 * @private
 */
export const pushPages = (opts) => new Promise((resolve, reject) => {
    const { src, logger } = opts;
    const ghpagesOpts = {
        repo: opts.repo,
        branch: opts.branch,
        dest: opts.dst,
        message: opts.message
    };
    ghpagePublish(src, ghpagesOpts, (err) => {
        if (err) {
            logger.error('Publish docs failure', err);
            reject(err);
        }
        else {
            logger.log(`Docs published successfully, branch=${ghpagesOpts.branch}, src=${src}, dst=${ghpagesOpts.dest}`);
            resolve(OK);
        }
    });
});
/**
 * @private
 */
export const publish = (opts) => pullTags(opts)
    .then(() => clean())
    .then(() => pushPages(opts));
