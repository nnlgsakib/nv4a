"use strict";
/** @module semantic-release-gh-pages-plugin */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var gh_pages_1 = require("gh-pages");
var execa_1 = tslib_1.__importDefault(require("execa"));
/**
 * @private
 */
exports.OK = { status: 'OK' };
/**
 * @private
 */
exports.pullTags = function (opts) {
    if (opts.pullTagsBranch === '') {
        return Promise.resolve();
    }
    var repo = '' + opts.repo;
    var pullTagsBranch = '' + opts.pullTagsBranch;
    var execaOpts = {
        env: opts.env,
        cwd: opts.cwd
    };
    return execa_1.default('git', ['pull', '--tags', '--force', repo, pullTagsBranch], execaOpts);
};
/**
 * @private
 */
exports.pushPages = function (opts) { return new Promise(function (resolve, reject) {
    var src = opts.src, logger = opts.logger;
    var ghpagesOpts = {
        repo: opts.repo,
        branch: opts.branch,
        dest: opts.dst,
        message: opts.message
    };
    gh_pages_1.publish(src, ghpagesOpts, function (err) {
        if (err) {
            logger.error('Publish docs failure', err);
            reject(err);
        }
        else {
            logger.log("Docs published successfully, branch=" + ghpagesOpts.branch + ", src=" + src + ", dst=" + ghpagesOpts.dest);
            resolve(exports.OK);
        }
    });
}); };
/**
 * @private
 */
exports.publish = function (opts) { return exports.pullTags(opts)
    .then(function () { return gh_pages_1.clean(); })
    .then(function () { return exports.pushPages(opts); }); };
